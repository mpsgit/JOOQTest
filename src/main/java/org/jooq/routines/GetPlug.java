/**
 * This class is generated by jOOQ
 */
package org.jooq.routines;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.Wetrn;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetPlug extends AbstractRoutine<BigDecimal> {

	private static final long serialVersionUID = -1858568276;

	/**
	 * The parameter <code>WETRN.GET_PLUG.RETURN_VALUE</code>.
	 */
	public static final Parameter<BigDecimal> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.FMODE</code>.
	 */
	public static final Parameter<String> FMODE = createParameter("FMODE", org.jooq.impl.SQLDataType.CHAR, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.MARKETLIST</code>.
	 */
	public static final Parameter<String> MARKETLIST = createParameter("MARKETLIST", org.jooq.impl.SQLDataType.CHAR, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.VEHICLELIST</code>.
	 */
	public static final Parameter<String> VEHICLELIST = createParameter("VEHICLELIST", org.jooq.impl.SQLDataType.CHAR, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.FROMOFFERPERDID</code>.
	 */
	public static final Parameter<BigDecimal> FROMOFFERPERDID = createParameter("FROMOFFERPERDID", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.TOOFFERPERDID</code>.
	 */
	public static final Parameter<BigDecimal> TOOFFERPERDID = createParameter("TOOFFERPERDID", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.VERSION</code>.
	 */
	public static final Parameter<BigDecimal> VERSION = createParameter("VERSION", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.PLUGTYPE</code>.
	 */
	public static final Parameter<BigDecimal> PLUGTYPE = createParameter("PLUGTYPE", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.CATEGORYLIST</code>.
	 */
	public static final Parameter<String> CATEGORYLIST = createParameter("CATEGORYLIST", org.jooq.impl.SQLDataType.CHAR, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.SLSELEMENTLIST</code>.
	 */
	public static final Parameter<String> SLSELEMENTLIST = createParameter("SLSELEMENTLIST", org.jooq.impl.SQLDataType.CHAR, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.MINOFFSET</code>.
	 */
	public static final Parameter<BigDecimal> MINOFFSET = createParameter("MINOFFSET", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.MAXOFFSET</code>.
	 */
	public static final Parameter<BigDecimal> MAXOFFSET = createParameter("MAXOFFSET", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.BOPO</code>.
	 */
	public static final Parameter<BigDecimal> BOPO = createParameter("BOPO", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.GET_PLUG.US</code>.
	 */
	public static final Parameter<String> US = createParameter("US", org.jooq.impl.SQLDataType.CHAR, false);

	/**
	 * Create a new routine call instance
	 */
	public GetPlug() {
		super("GET_PLUG", Wetrn.WETRN, org.jooq.impl.SQLDataType.NUMERIC);

		setReturnParameter(RETURN_VALUE);
		addInParameter(FMODE);
		addInParameter(MARKETLIST);
		addInParameter(VEHICLELIST);
		addInParameter(FROMOFFERPERDID);
		addInParameter(TOOFFERPERDID);
		addInParameter(VERSION);
		addInParameter(PLUGTYPE);
		addInParameter(CATEGORYLIST);
		addInParameter(SLSELEMENTLIST);
		addInParameter(MINOFFSET);
		addInParameter(MAXOFFSET);
		addInParameter(BOPO);
		addInParameter(US);
	}

	/**
	 * Set the <code>FMODE</code> parameter IN value to the routine
	 */
	public void setFmode(String value) {
		setValue(FMODE, value);
	}

	/**
	 * Set the <code>FMODE</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setFmode(Field<String> field) {
		setField(FMODE, field);
	}

	/**
	 * Set the <code>MARKETLIST</code> parameter IN value to the routine
	 */
	public void setMarketlist(String value) {
		setValue(MARKETLIST, value);
	}

	/**
	 * Set the <code>MARKETLIST</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setMarketlist(Field<String> field) {
		setField(MARKETLIST, field);
	}

	/**
	 * Set the <code>VEHICLELIST</code> parameter IN value to the routine
	 */
	public void setVehiclelist(String value) {
		setValue(VEHICLELIST, value);
	}

	/**
	 * Set the <code>VEHICLELIST</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setVehiclelist(Field<String> field) {
		setField(VEHICLELIST, field);
	}

	/**
	 * Set the <code>FROMOFFERPERDID</code> parameter IN value to the routine
	 */
	public void setFromofferperdid(Number value) {
		setNumber(FROMOFFERPERDID, value);
	}

	/**
	 * Set the <code>FROMOFFERPERDID</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setFromofferperdid(Field<? extends Number> field) {
		setNumber(FROMOFFERPERDID, field);
	}

	/**
	 * Set the <code>TOOFFERPERDID</code> parameter IN value to the routine
	 */
	public void setToofferperdid(Number value) {
		setNumber(TOOFFERPERDID, value);
	}

	/**
	 * Set the <code>TOOFFERPERDID</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setToofferperdid(Field<? extends Number> field) {
		setNumber(TOOFFERPERDID, field);
	}

	/**
	 * Set the <code>VERSION</code> parameter IN value to the routine
	 */
	public void setVersion(Number value) {
		setNumber(VERSION, value);
	}

	/**
	 * Set the <code>VERSION</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setVersion(Field<? extends Number> field) {
		setNumber(VERSION, field);
	}

	/**
	 * Set the <code>PLUGTYPE</code> parameter IN value to the routine
	 */
	public void setPlugtype(Number value) {
		setNumber(PLUGTYPE, value);
	}

	/**
	 * Set the <code>PLUGTYPE</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPlugtype(Field<? extends Number> field) {
		setNumber(PLUGTYPE, field);
	}

	/**
	 * Set the <code>CATEGORYLIST</code> parameter IN value to the routine
	 */
	public void setCategorylist(String value) {
		setValue(CATEGORYLIST, value);
	}

	/**
	 * Set the <code>CATEGORYLIST</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setCategorylist(Field<String> field) {
		setField(CATEGORYLIST, field);
	}

	/**
	 * Set the <code>SLSELEMENTLIST</code> parameter IN value to the routine
	 */
	public void setSlselementlist(String value) {
		setValue(SLSELEMENTLIST, value);
	}

	/**
	 * Set the <code>SLSELEMENTLIST</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setSlselementlist(Field<String> field) {
		setField(SLSELEMENTLIST, field);
	}

	/**
	 * Set the <code>MINOFFSET</code> parameter IN value to the routine
	 */
	public void setMinoffset(Number value) {
		setNumber(MINOFFSET, value);
	}

	/**
	 * Set the <code>MINOFFSET</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setMinoffset(Field<? extends Number> field) {
		setNumber(MINOFFSET, field);
	}

	/**
	 * Set the <code>MAXOFFSET</code> parameter IN value to the routine
	 */
	public void setMaxoffset(Number value) {
		setNumber(MAXOFFSET, value);
	}

	/**
	 * Set the <code>MAXOFFSET</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setMaxoffset(Field<? extends Number> field) {
		setNumber(MAXOFFSET, field);
	}

	/**
	 * Set the <code>BOPO</code> parameter IN value to the routine
	 */
	public void setBopo(Number value) {
		setNumber(BOPO, value);
	}

	/**
	 * Set the <code>BOPO</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setBopo(Field<? extends Number> field) {
		setNumber(BOPO, field);
	}

	/**
	 * Set the <code>US</code> parameter IN value to the routine
	 */
	public void setUs(String value) {
		setValue(US, value);
	}

	/**
	 * Set the <code>US</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setUs(Field<String> field) {
		setField(US, field);
	}
}

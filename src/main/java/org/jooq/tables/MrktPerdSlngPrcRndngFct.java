/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.MrktPerdSlngPrcRndngFctRecord;


/**
 * Market Period Selling Price Rounding Factor; used to record how the Selling 
 * Price rounding is to be done for a Market.  And the Market Campaign from 
 * which it is effective
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MrktPerdSlngPrcRndngFct extends TableImpl<MrktPerdSlngPrcRndngFctRecord> {

	private static final long serialVersionUID = 1014422296;

	/**
	 * The reference instance of <code>WETRN.MRKT_PERD_SLNG_PRC_RNDNG_FCT</code>
	 */
	public static final MrktPerdSlngPrcRndngFct MRKT_PERD_SLNG_PRC_RNDNG_FCT = new MrktPerdSlngPrcRndngFct();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MrktPerdSlngPrcRndngFctRecord> getRecordType() {
		return MrktPerdSlngPrcRndngFctRecord.class;
	}

	/**
	 * The column <code>WETRN.MRKT_PERD_SLNG_PRC_RNDNG_FCT.MRKT_ID</code>. An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.
	 */
	public final TableField<MrktPerdSlngPrcRndngFctRecord, BigDecimal> MRKT_ID = createField("MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.");

	/**
	 * The column <code>WETRN.MRKT_PERD_SLNG_PRC_RNDNG_FCT.EFF_PERD_ID</code>. A unique surrogate identifier for a Campaign, Quater or Annual Period.
	 */
	public final TableField<MrktPerdSlngPrcRndngFctRecord, BigDecimal> EFF_PERD_ID = createField("EFF_PERD_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "A unique surrogate identifier for a Campaign, Quater or Annual Period.");

	/**
	 * The column <code>WETRN.MRKT_PERD_SLNG_PRC_RNDNG_FCT.RNDNG_MTHD_ID</code>. A unique identifier for the Rounding Method to be used on the Selling Price i.e. Normal (0) or Half method (1)
	 */
	public final TableField<MrktPerdSlngPrcRndngFctRecord, BigDecimal> RNDNG_MTHD_ID = createField("RNDNG_MTHD_ID", org.jooq.impl.SQLDataType.NUMERIC.defaulted(true), this, "A unique identifier for the Rounding Method to be used on the Selling Price i.e. Normal (0) or Half method (1)");

	/**
	 * The column <code>WETRN.MRKT_PERD_SLNG_PRC_RNDNG_FCT.RNDNG_FCT</code>. Rounding Factor; the number of decimal or integer places to round to
	 */
	public final TableField<MrktPerdSlngPrcRndngFctRecord, BigDecimal> RNDNG_FCT = createField("RNDNG_FCT", org.jooq.impl.SQLDataType.NUMERIC.precision(9, 6).defaulted(true), this, "Rounding Factor; the number of decimal or integer places to round to");

	/**
	 * The column <code>WETRN.MRKT_PERD_SLNG_PRC_RNDNG_FCT.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public final TableField<MrktPerdSlngPrcRndngFctRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "The MAPS Application USER ID of the user (person or process) that created the row.");

	/**
	 * The column <code>WETRN.MRKT_PERD_SLNG_PRC_RNDNG_FCT.CREAT_TS</code>. The date and time the row was created.
	 */
	public final TableField<MrktPerdSlngPrcRndngFctRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was created.");

	/**
	 * The column <code>WETRN.MRKT_PERD_SLNG_PRC_RNDNG_FCT.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public final TableField<MrktPerdSlngPrcRndngFctRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "Contains the MAPS USER ID of the user (person or process) that last updated the row.");

	/**
	 * The column <code>WETRN.MRKT_PERD_SLNG_PRC_RNDNG_FCT.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public final TableField<MrktPerdSlngPrcRndngFctRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE, this, "The date and time the row was last updated.");

	/**
	 * Create a <code>WETRN.MRKT_PERD_SLNG_PRC_RNDNG_FCT</code> table reference
	 */
	public MrktPerdSlngPrcRndngFct() {
		this("MRKT_PERD_SLNG_PRC_RNDNG_FCT", null);
	}

	/**
	 * Create an aliased <code>WETRN.MRKT_PERD_SLNG_PRC_RNDNG_FCT</code> table reference
	 */
	public MrktPerdSlngPrcRndngFct(String alias) {
		this(alias, MRKT_PERD_SLNG_PRC_RNDNG_FCT);
	}

	private MrktPerdSlngPrcRndngFct(String alias, Table<MrktPerdSlngPrcRndngFctRecord> aliased) {
		this(alias, aliased, null);
	}

	private MrktPerdSlngPrcRndngFct(String alias, Table<MrktPerdSlngPrcRndngFctRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "Market Period Selling Price Rounding Factor; used to record how the Selling Price rounding is to be done for a Market.  And the Market Campaign from which it is effective");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MrktPerdSlngPrcRndngFctRecord> getPrimaryKey() {
		return Keys.PK_MRKT_PERD_SLNG_PRC_RNDNG_FC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MrktPerdSlngPrcRndngFctRecord>> getKeys() {
		return Arrays.<UniqueKey<MrktPerdSlngPrcRndngFctRecord>>asList(Keys.PK_MRKT_PERD_SLNG_PRC_RNDNG_FC);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<MrktPerdSlngPrcRndngFctRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<MrktPerdSlngPrcRndngFctRecord, ?>>asList(Keys.FK_MRKTPERD_MRKTPERDSLNGPRCRND, Keys.FK_RNDNGMTHD_MRKTPERDSLNGPRCRN);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MrktPerdSlngPrcRndngFct as(String alias) {
		return new MrktPerdSlngPrcRndngFct(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MrktPerdSlngPrcRndngFct rename(String name) {
		return new MrktPerdSlngPrcRndngFct(name, null);
	}
}

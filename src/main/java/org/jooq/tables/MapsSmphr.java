/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.MapsSmphrRecord;


/**
 * MAPS semaphore.  Locking table for any procedure or function to use.  Procedures 
 * can use this to prevent instances of themselves running at the same time 
 * in another session by selecting where maps_smphr_cd = <procedure name> 
 * for update.  The code between the select and commit/rollback will then 
 * be the only instance of this code running in any session.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MapsSmphr extends TableImpl<MapsSmphrRecord> {

	private static final long serialVersionUID = 246025628;

	/**
	 * The reference instance of <code>WETRN.MAPS_SMPHR</code>
	 */
	public static final MapsSmphr MAPS_SMPHR = new MapsSmphr();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MapsSmphrRecord> getRecordType() {
		return MapsSmphrRecord.class;
	}

	/**
	 * The column <code>WETRN.MAPS_SMPHR.MAPS_SMPHR_CD</code>. MAPS SEMAPHORE CODE.  The code or name of the procedure or function that requires the self lock.  E.g. <package>.<function>.
	 */
	public final TableField<MapsSmphrRecord, String> MAPS_SMPHR_CD = createField("MAPS_SMPHR_CD", org.jooq.impl.SQLDataType.VARCHAR.length(61).nullable(false), this, "MAPS SEMAPHORE CODE.  The code or name of the procedure or function that requires the self lock.  E.g. <package>.<function>.");

	/**
	 * The column <code>WETRN.MAPS_SMPHR.CREAT_USER_ID</code>.
	 */
	public final TableField<MapsSmphrRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>WETRN.MAPS_SMPHR.CREAT_TS</code>.
	 */
	public final TableField<MapsSmphrRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>WETRN.MAPS_SMPHR.LAST_UPDT_USER_ID</code>.
	 */
	public final TableField<MapsSmphrRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>WETRN.MAPS_SMPHR.LAST_UPDT_TS</code>.
	 */
	public final TableField<MapsSmphrRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>WETRN.MAPS_SMPHR</code> table reference
	 */
	public MapsSmphr() {
		this("MAPS_SMPHR", null);
	}

	/**
	 * Create an aliased <code>WETRN.MAPS_SMPHR</code> table reference
	 */
	public MapsSmphr(String alias) {
		this(alias, MAPS_SMPHR);
	}

	private MapsSmphr(String alias, Table<MapsSmphrRecord> aliased) {
		this(alias, aliased, null);
	}

	private MapsSmphr(String alias, Table<MapsSmphrRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "MAPS semaphore.  Locking table for any procedure or function to use.  Procedures can use this to prevent instances of themselves running at the same time in another session by selecting where maps_smphr_cd = <procedure name> for update.  The code between the select and commit/rollback will then be the only instance of this code running in any session.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MapsSmphrRecord> getPrimaryKey() {
		return Keys.PK_MAPS_SMPHR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MapsSmphrRecord>> getKeys() {
		return Arrays.<UniqueKey<MapsSmphrRecord>>asList(Keys.PK_MAPS_SMPHR);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MapsSmphr as(String alias) {
		return new MapsSmphr(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MapsSmphr rename(String name) {
		return new MapsSmphr(name, null);
	}
}

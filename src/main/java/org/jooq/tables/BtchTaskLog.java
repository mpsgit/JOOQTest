/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.BtchTaskLogRecord;


/**
 * Batch task log.  Log for error and information messages.  The BTCH_TASK_LOG_TYP_ID 
 * indicates the type of log entry.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BtchTaskLog extends TableImpl<BtchTaskLogRecord> {

	private static final long serialVersionUID = -495230175;

	/**
	 * The reference instance of <code>WETRN.BTCH_TASK_LOG</code>
	 */
	public static final BtchTaskLog BTCH_TASK_LOG = new BtchTaskLog();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BtchTaskLogRecord> getRecordType() {
		return BtchTaskLogRecord.class;
	}

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_ID</code>. Batch task log id.  Unique identifier for the log entry.  Populated from SEQ_BTCH_FRAMWORK.
	 */
	public final TableField<BtchTaskLogRecord, BigDecimal> BTCH_TASK_LOG_ID = createField("BTCH_TASK_LOG_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Batch task log id.  Unique identifier for the log entry.  Populated from SEQ_BTCH_FRAMWORK.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_ID</code>. Batch task id.  The task id related to this log.
	 */
	public final TableField<BtchTaskLogRecord, BigDecimal> BTCH_TASK_ID = createField("BTCH_TASK_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Batch task id.  The task id related to this log.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_TYP_ID</code>. Batch task log type id.  The log type of the log entry.
	 */
	public final TableField<BtchTaskLogRecord, BigDecimal> BTCH_TASK_LOG_TYP_ID = createField("BTCH_TASK_LOG_TYP_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Batch task log type id.  The log type of the log entry.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_MRKT_ID</code>. Batch task log market id.
	 */
	public final TableField<BtchTaskLogRecord, BigDecimal> BTCH_TASK_LOG_MRKT_ID = createField("BTCH_TASK_LOG_MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "Batch task log market id.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_VEH_ID</code>. Batch task log vehicle id.
	 */
	public final TableField<BtchTaskLogRecord, BigDecimal> BTCH_TASK_LOG_VEH_ID = createField("BTCH_TASK_LOG_VEH_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "Batch task log vehicle id.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_OFFR_PERD_ID</code>. Batch task log offer period id.
	 */
	public final TableField<BtchTaskLogRecord, BigDecimal> BTCH_TASK_LOG_OFFR_PERD_ID = createField("BTCH_TASK_LOG_OFFR_PERD_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "Batch task log offer period id.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_VER_ID</code>. Batch task log version id.
	 */
	public final TableField<BtchTaskLogRecord, BigDecimal> BTCH_TASK_LOG_VER_ID = createField("BTCH_TASK_LOG_VER_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "Batch task log version id.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_ERR_LVL_TXT</code>.
	 */
	public final TableField<BtchTaskLogRecord, String> BTCH_TASK_LOG_ERR_LVL_TXT = createField("BTCH_TASK_LOG_ERR_LVL_TXT", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_PRFL_CD</code>. Batch task log profile code.
	 */
	public final TableField<BtchTaskLogRecord, Integer> BTCH_TASK_LOG_PRFL_CD = createField("BTCH_TASK_LOG_PRFL_CD", org.jooq.impl.SQLDataType.INTEGER, this, "Batch task log profile code.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_SKU_ID</code>. Batch task log sku id.
	 */
	public final TableField<BtchTaskLogRecord, BigDecimal> BTCH_TASK_LOG_SKU_ID = createField("BTCH_TASK_LOG_SKU_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "Batch task log sku id.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_FSC_CD</code>. Batch task log FSC.
	 */
	public final TableField<BtchTaskLogRecord, String> BTCH_TASK_LOG_FSC_CD = createField("BTCH_TASK_LOG_FSC_CD", org.jooq.impl.SQLDataType.VARCHAR.length(8), this, "Batch task log FSC.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_DESC_TXT</code>. Batch task log description text.  The descriptive text for the log entry.  This could be the reason for an error.  E.g. Profile missing from target market.
	 */
	public final TableField<BtchTaskLogRecord, String> BTCH_TASK_LOG_DESC_TXT = createField("BTCH_TASK_LOG_DESC_TXT", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false), this, "Batch task log description text.  The descriptive text for the log entry.  This could be the reason for an error.  E.g. Profile missing from target market.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_TO_BE_BOOSTD_QTY</code>.
	 */
	public final TableField<BtchTaskLogRecord, Integer> BTCH_TASK_LOG_TO_BE_BOOSTD_QTY = createField("BTCH_TASK_LOG_TO_BE_BOOSTD_QTY", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.BTCH_TASK_LOG_NOT_BOOSTD_QTY</code>.
	 */
	public final TableField<BtchTaskLogRecord, Integer> BTCH_TASK_LOG_NOT_BOOSTD_QTY = createField("BTCH_TASK_LOG_NOT_BOOSTD_QTY", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public final TableField<BtchTaskLogRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "The MAPS Application USER ID of the user (person or process) that created the row.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.CREAT_TS</code>. The date and time the row was created.
	 */
	public final TableField<BtchTaskLogRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was created.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public final TableField<BtchTaskLogRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "Contains the MAPS USER ID of the user (person or process) that last updated the row.");

	/**
	 * The column <code>WETRN.BTCH_TASK_LOG.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public final TableField<BtchTaskLogRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was last updated.");

	/**
	 * Create a <code>WETRN.BTCH_TASK_LOG</code> table reference
	 */
	public BtchTaskLog() {
		this("BTCH_TASK_LOG", null);
	}

	/**
	 * Create an aliased <code>WETRN.BTCH_TASK_LOG</code> table reference
	 */
	public BtchTaskLog(String alias) {
		this(alias, BTCH_TASK_LOG);
	}

	private BtchTaskLog(String alias, Table<BtchTaskLogRecord> aliased) {
		this(alias, aliased, null);
	}

	private BtchTaskLog(String alias, Table<BtchTaskLogRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "Batch task log.  Log for error and information messages.  The BTCH_TASK_LOG_TYP_ID indicates the type of log entry.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BtchTaskLogRecord> getPrimaryKey() {
		return Keys.PK_BTCH_TASK_LOG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BtchTaskLogRecord>> getKeys() {
		return Arrays.<UniqueKey<BtchTaskLogRecord>>asList(Keys.PK_BTCH_TASK_LOG);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<BtchTaskLogRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<BtchTaskLogRecord, ?>>asList(Keys.FK_BTCHTASK_BTCHTASKLOG, Keys.FK_BTCHTASKLOGTYP_BTCHTASKLOG);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BtchTaskLog as(String alias) {
		return new BtchTaskLog(alias, this);
	}

	/**
	 * Rename this table
	 */
	public BtchTaskLog rename(String name) {
		return new BtchTaskLog(name, null);
	}
}

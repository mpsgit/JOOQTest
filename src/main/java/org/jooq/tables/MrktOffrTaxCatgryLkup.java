/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.MrktOffrTaxCatgryLkupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MrktOffrTaxCatgryLkup extends TableImpl<MrktOffrTaxCatgryLkupRecord> {

	private static final long serialVersionUID = -285250736;

	/**
	 * The reference instance of <code>WETRN.MRKT_OFFR_TAX_CATGRY_LKUP</code>
	 */
	public static final MrktOffrTaxCatgryLkup MRKT_OFFR_TAX_CATGRY_LKUP = new MrktOffrTaxCatgryLkup();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MrktOffrTaxCatgryLkupRecord> getRecordType() {
		return MrktOffrTaxCatgryLkupRecord.class;
	}

	/**
	 * The column <code>WETRN.MRKT_OFFR_TAX_CATGRY_LKUP.MRKT_ID</code>. An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.
	 */
	public final TableField<MrktOffrTaxCatgryLkupRecord, BigDecimal> MRKT_ID = createField("MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.");

	/**
	 * The column <code>WETRN.MRKT_OFFR_TAX_CATGRY_LKUP.EFF_PERD_ID</code>.
	 */
	public final TableField<MrktOffrTaxCatgryLkupRecord, BigDecimal> EFF_PERD_ID = createField("EFF_PERD_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>WETRN.MRKT_OFFR_TAX_CATGRY_LKUP.MRKT_TAX_CATGRY_LKUP_ID</code>. A Surrogate ID because something other than SALES CLASS may be used to look up the Market Tax Category in the future.
	 */
	public final TableField<MrktOffrTaxCatgryLkupRecord, BigDecimal> MRKT_TAX_CATGRY_LKUP_ID = createField("MRKT_TAX_CATGRY_LKUP_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "A Surrogate ID because something other than SALES CLASS may be used to look up the Market Tax Category in the future.");

	/**
	 * The column <code>WETRN.MRKT_OFFR_TAX_CATGRY_LKUP.SEQ_NR</code>.
	 */
	public final TableField<MrktOffrTaxCatgryLkupRecord, BigDecimal> SEQ_NR = createField("SEQ_NR", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>WETRN.MRKT_OFFR_TAX_CATGRY_LKUP.MRKT_TAX_CATGRY_ID</code>.
	 */
	public final TableField<MrktOffrTaxCatgryLkupRecord, BigDecimal> MRKT_TAX_CATGRY_ID = createField("MRKT_TAX_CATGRY_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>WETRN.MRKT_OFFR_TAX_CATGRY_LKUP.SLS_CLS_CD</code>. The unique identifier for SALES CLASS.  It is a  grouping of OFFERs. i.e. NEW, INLINE, EXCESS, DEMO, SAMPLE
	 */
	public final TableField<MrktOffrTaxCatgryLkupRecord, String> SLS_CLS_CD = createField("SLS_CLS_CD", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "The unique identifier for SALES CLASS.  It is a  grouping of OFFERs. i.e. NEW, INLINE, EXCESS, DEMO, SAMPLE");

	/**
	 * The column <code>WETRN.MRKT_OFFR_TAX_CATGRY_LKUP.PROD_TYP_ID</code>.
	 */
	public final TableField<MrktOffrTaxCatgryLkupRecord, BigDecimal> PROD_TYP_ID = createField("PROD_TYP_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * Create a <code>WETRN.MRKT_OFFR_TAX_CATGRY_LKUP</code> table reference
	 */
	public MrktOffrTaxCatgryLkup() {
		this("MRKT_OFFR_TAX_CATGRY_LKUP", null);
	}

	/**
	 * Create an aliased <code>WETRN.MRKT_OFFR_TAX_CATGRY_LKUP</code> table reference
	 */
	public MrktOffrTaxCatgryLkup(String alias) {
		this(alias, MRKT_OFFR_TAX_CATGRY_LKUP);
	}

	private MrktOffrTaxCatgryLkup(String alias, Table<MrktOffrTaxCatgryLkupRecord> aliased) {
		this(alias, aliased, null);
	}

	private MrktOffrTaxCatgryLkup(String alias, Table<MrktOffrTaxCatgryLkupRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MrktOffrTaxCatgryLkupRecord> getPrimaryKey() {
		return Keys.PK_MRKT_OFFR_TAX_CATGRY_LKUP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MrktOffrTaxCatgryLkupRecord>> getKeys() {
		return Arrays.<UniqueKey<MrktOffrTaxCatgryLkupRecord>>asList(Keys.PK_MRKT_OFFR_TAX_CATGRY_LKUP);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<MrktOffrTaxCatgryLkupRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<MrktOffrTaxCatgryLkupRecord, ?>>asList(Keys.FK_MRKTTAXCATGRY_MRKTOFFRTAXCA, Keys.FK_MRKT_MRKTOFFRTAXCATGRYLKUP, Keys.FK_SLSCLS_MRKTOFFRTAXCATGRYLKU, Keys.FK_PRODTYP_MRKTOFFRTAXCATGRYLK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MrktOffrTaxCatgryLkup as(String alias) {
		return new MrktOffrTaxCatgryLkup(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MrktOffrTaxCatgryLkup rename(String name) {
		return new MrktOffrTaxCatgryLkup(name, null);
	}
}

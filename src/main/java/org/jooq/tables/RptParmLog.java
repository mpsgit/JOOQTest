/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.RptParmLogRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RptParmLog extends TableImpl<RptParmLogRecord> {

	private static final long serialVersionUID = -1540597681;

	/**
	 * The reference instance of <code>WETRN.RPT_PARM_LOG</code>
	 */
	public static final RptParmLog RPT_PARM_LOG = new RptParmLog();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RptParmLogRecord> getRecordType() {
		return RptParmLogRecord.class;
	}

	/**
	 * The column <code>WETRN.RPT_PARM_LOG.RPT_LOG_ID</code>. A unique identifier for the Report Log Entry.
	 */
	public final TableField<RptParmLogRecord, BigDecimal> RPT_LOG_ID = createField("RPT_LOG_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "A unique identifier for the Report Log Entry.");

	/**
	 * The column <code>WETRN.RPT_PARM_LOG.PARM_NM</code>. The name of the Report Parameter.
	 */
	public final TableField<RptParmLogRecord, String> PARM_NM = createField("PARM_NM", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "The name of the Report Parameter.");

	/**
	 * The column <code>WETRN.RPT_PARM_LOG.PARM_VAL_TXT</code>. The value of the Report Parameter in variable character format
	 */
	public final TableField<RptParmLogRecord, String> PARM_VAL_TXT = createField("PARM_VAL_TXT", org.jooq.impl.SQLDataType.VARCHAR.length(4000).nullable(false), this, "The value of the Report Parameter in variable character format");

	/**
	 * The column <code>WETRN.RPT_PARM_LOG.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public final TableField<RptParmLogRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "The MAPS Application USER ID of the user (person or process) that created the row.");

	/**
	 * The column <code>WETRN.RPT_PARM_LOG.CREAT_TS</code>. The date and time the row was created.
	 */
	public final TableField<RptParmLogRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was created.");

	/**
	 * The column <code>WETRN.RPT_PARM_LOG.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public final TableField<RptParmLogRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "Contains the MAPS USER ID of the user (person or process) that last updated the row.");

	/**
	 * The column <code>WETRN.RPT_PARM_LOG.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public final TableField<RptParmLogRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE, this, "The date and time the row was last updated.");

	/**
	 * Create a <code>WETRN.RPT_PARM_LOG</code> table reference
	 */
	public RptParmLog() {
		this("RPT_PARM_LOG", null);
	}

	/**
	 * Create an aliased <code>WETRN.RPT_PARM_LOG</code> table reference
	 */
	public RptParmLog(String alias) {
		this(alias, RPT_PARM_LOG);
	}

	private RptParmLog(String alias, Table<RptParmLogRecord> aliased) {
		this(alias, aliased, null);
	}

	private RptParmLog(String alias, Table<RptParmLogRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RptParmLogRecord> getPrimaryKey() {
		return Keys.PK_RPT_PARM_LOG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RptParmLogRecord>> getKeys() {
		return Arrays.<UniqueKey<RptParmLogRecord>>asList(Keys.PK_RPT_PARM_LOG);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<RptParmLogRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<RptParmLogRecord, ?>>asList(Keys.FK_RPTLOG_RPTPARMLOG);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RptParmLog as(String alias) {
		return new RptParmLog(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RptParmLog rename(String name) {
		return new RptParmLog(name, null);
	}
}

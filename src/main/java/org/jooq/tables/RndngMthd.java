/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.RndngMthdRecord;


/**
 * Rounding Method to be used on the Selling Price i.e. Normal or Half method
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RndngMthd extends TableImpl<RndngMthdRecord> {

	private static final long serialVersionUID = -922279521;

	/**
	 * The reference instance of <code>WETRN.RNDNG_MTHD</code>
	 */
	public static final RndngMthd RNDNG_MTHD = new RndngMthd();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RndngMthdRecord> getRecordType() {
		return RndngMthdRecord.class;
	}

	/**
	 * The column <code>WETRN.RNDNG_MTHD.RNDNG_MTHD_ID</code>. A unique identifier for the Rounding Method to be used on the Selling Price i.e. Normal (0) or Half method (1)
	 */
	public final TableField<RndngMthdRecord, BigDecimal> RNDNG_MTHD_ID = createField("RNDNG_MTHD_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "A unique identifier for the Rounding Method to be used on the Selling Price i.e. Normal (0) or Half method (1)");

	/**
	 * The column <code>WETRN.RNDNG_MTHD.RNDNG_MTHD_DESC_TXT</code>. A description of the Rounding Method to be used on the Selling Price i.e. Normal or Half method
	 */
	public final TableField<RndngMthdRecord, String> RNDNG_MTHD_DESC_TXT = createField("RNDNG_MTHD_DESC_TXT", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "A description of the Rounding Method to be used on the Selling Price i.e. Normal or Half method");

	/**
	 * The column <code>WETRN.RNDNG_MTHD.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public final TableField<RndngMthdRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "The MAPS Application USER ID of the user (person or process) that created the row.");

	/**
	 * The column <code>WETRN.RNDNG_MTHD.CREAT_TS</code>. The date and time the row was created.
	 */
	public final TableField<RndngMthdRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was created.");

	/**
	 * The column <code>WETRN.RNDNG_MTHD.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public final TableField<RndngMthdRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "Contains the MAPS USER ID of the user (person or process) that last updated the row.");

	/**
	 * The column <code>WETRN.RNDNG_MTHD.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public final TableField<RndngMthdRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE, this, "The date and time the row was last updated.");

	/**
	 * Create a <code>WETRN.RNDNG_MTHD</code> table reference
	 */
	public RndngMthd() {
		this("RNDNG_MTHD", null);
	}

	/**
	 * Create an aliased <code>WETRN.RNDNG_MTHD</code> table reference
	 */
	public RndngMthd(String alias) {
		this(alias, RNDNG_MTHD);
	}

	private RndngMthd(String alias, Table<RndngMthdRecord> aliased) {
		this(alias, aliased, null);
	}

	private RndngMthd(String alias, Table<RndngMthdRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "Rounding Method to be used on the Selling Price i.e. Normal or Half method");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RndngMthdRecord> getPrimaryKey() {
		return Keys.PK_RNDNG_MTHD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RndngMthdRecord>> getKeys() {
		return Arrays.<UniqueKey<RndngMthdRecord>>asList(Keys.PK_RNDNG_MTHD);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RndngMthd as(String alias) {
		return new RndngMthd(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RndngMthd rename(String name) {
		return new RndngMthd(name, null);
	}
}

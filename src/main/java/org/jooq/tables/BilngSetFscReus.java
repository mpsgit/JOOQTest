/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.BilngSetFscReusRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BilngSetFscReus extends TableImpl<BilngSetFscReusRecord> {

	private static final long serialVersionUID = 1615771251;

	/**
	 * The reference instance of <code>WETRN.BILNG_SET_FSC_REUS</code>
	 */
	public static final BilngSetFscReus BILNG_SET_FSC_REUS = new BilngSetFscReus();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BilngSetFscReusRecord> getRecordType() {
		return BilngSetFscReusRecord.class;
	}

	/**
	 * The column <code>WETRN.BILNG_SET_FSC_REUS.BILNG_SYS_GRP_LEAD_MRKT_ID</code>. An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.
	 */
	public final TableField<BilngSetFscReusRecord, BigDecimal> BILNG_SYS_GRP_LEAD_MRKT_ID = createField("BILNG_SYS_GRP_LEAD_MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.");

	/**
	 * The column <code>WETRN.BILNG_SET_FSC_REUS.STRT_PERD_ID</code>. A unique surrogate identifier for a Campaign, Quarter or Annual Period.
	 */
	public final TableField<BilngSetFscReusRecord, BigDecimal> STRT_PERD_ID = createField("STRT_PERD_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "A unique surrogate identifier for a Campaign, Quarter or Annual Period.");

	/**
	 * The column <code>WETRN.BILNG_SET_FSC_REUS.CMPGNS_BFR_REUS_NR</code>. The number of Campaigns before a Line Number or FSC can be reused.
	 */
	public final TableField<BilngSetFscReusRecord, BigDecimal> CMPGNS_BFR_REUS_NR = createField("CMPGNS_BFR_REUS_NR", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "The number of Campaigns before a Line Number or FSC can be reused.");

	/**
	 * The column <code>WETRN.BILNG_SET_FSC_REUS.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public final TableField<BilngSetFscReusRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "The MAPS Application USER ID of the user (person or process) that created the row.");

	/**
	 * The column <code>WETRN.BILNG_SET_FSC_REUS.CREAT_TS</code>. The date and time the row was created.
	 */
	public final TableField<BilngSetFscReusRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was created.");

	/**
	 * The column <code>WETRN.BILNG_SET_FSC_REUS.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public final TableField<BilngSetFscReusRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "Contains the MAPS USER ID of the user (person or process) that last updated the row.");

	/**
	 * The column <code>WETRN.BILNG_SET_FSC_REUS.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public final TableField<BilngSetFscReusRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was last updated.");

	/**
	 * Create a <code>WETRN.BILNG_SET_FSC_REUS</code> table reference
	 */
	public BilngSetFscReus() {
		this("BILNG_SET_FSC_REUS", null);
	}

	/**
	 * Create an aliased <code>WETRN.BILNG_SET_FSC_REUS</code> table reference
	 */
	public BilngSetFscReus(String alias) {
		this(alias, BILNG_SET_FSC_REUS);
	}

	private BilngSetFscReus(String alias, Table<BilngSetFscReusRecord> aliased) {
		this(alias, aliased, null);
	}

	private BilngSetFscReus(String alias, Table<BilngSetFscReusRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BilngSetFscReusRecord> getPrimaryKey() {
		return Keys.PK_BILNG_SET_FSC_REUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BilngSetFscReusRecord>> getKeys() {
		return Arrays.<UniqueKey<BilngSetFscReusRecord>>asList(Keys.PK_BILNG_SET_FSC_REUS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<BilngSetFscReusRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<BilngSetFscReusRecord, ?>>asList(Keys.FK_MRKTPERD_BILNGSETFSCREUS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BilngSetFscReus as(String alias) {
		return new BilngSetFscReus(alias, this);
	}

	/**
	 * Rename this table
	 */
	public BilngSetFscReus rename(String name) {
		return new BilngSetFscReus(name, null);
	}
}

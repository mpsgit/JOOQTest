/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.MrktEstWghtRecord;


/**
 * Purpose: within the MAPS Marketing system, store the Estimate Relative 
 * Weighting Percentage (importance) for a Campaign.  The Campaign is stored 
 * here as a relative campaign i.e. starting at the latest Offset Anchor Sales 
 * Type (for example the latest Actual campaign), for the campaign that is 
 * offset by the number of plus or minus campaigns.  These are the weighting's 
 * to be applied to this campaign. -- Note: this Relative Weighting Percentage 
 * information is used to calculate the Real Weighting Percentage which can 
 * be viewed by the MAPS user in the MAPS Demand Planning screens when estimating 
 * Units demand for an Offer Concept. Because this is static data, it is not 
 * proposed to develop a screen to maintain this data.  Instead this will 
 * be configured by the MAPS IT team.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MrktEstWght extends TableImpl<MrktEstWghtRecord> {

	private static final long serialVersionUID = -1304485005;

	/**
	 * The reference instance of <code>WETRN.MRKT_EST_WGHT</code>
	 */
	public static final MrktEstWght MRKT_EST_WGHT = new MrktEstWght();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MrktEstWghtRecord> getRecordType() {
		return MrktEstWghtRecord.class;
	}

	/**
	 * The column <code>WETRN.MRKT_EST_WGHT.MRKT_ID</code>. An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.
	 */
	public final TableField<MrktEstWghtRecord, BigDecimal> MRKT_ID = createField("MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.");

	/**
	 * The column <code>WETRN.MRKT_EST_WGHT.STRT_PERD_ID</code>. A unique surrogate identifier for a Campaign, Quater or Annual Period.
	 */
	public final TableField<MrktEstWghtRecord, BigDecimal> STRT_PERD_ID = createField("STRT_PERD_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "A unique surrogate identifier for a Campaign, Quater or Annual Period.");

	/**
	 * The column <code>WETRN.MRKT_EST_WGHT.EST_WGHT_TYP_ID</code>. Uniquely identifies if the Weight Type is 100 - Normal, or 200 - Seasonal.
	 */
	public final TableField<MrktEstWghtRecord, BigDecimal> EST_WGHT_TYP_ID = createField("EST_WGHT_TYP_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Uniquely identifies if the Weight Type is 100 - Normal, or 200 - Seasonal.");

	/**
	 * The column <code>WETRN.MRKT_EST_WGHT.OFS_SLS_TYP_GRP_ID</code>. Uniquley identifies the Groups of versions (Sales Types) of SALES that are being developed: e.g. Estimate, Trend, or Actual.
	 */
	public final TableField<MrktEstWghtRecord, BigDecimal> OFS_SLS_TYP_GRP_ID = createField("OFS_SLS_TYP_GRP_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Uniquley identifies the Groups of versions (Sales Types) of SALES that are being developed: e.g. Estimate, Trend, or Actual.");

	/**
	 * The column <code>WETRN.MRKT_EST_WGHT.YR_OFS_NR</code>. Offset for the year
	 */
	public final TableField<MrktEstWghtRecord, Short> YR_OFS_NR = createField("YR_OFS_NR", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaulted(true), this, "Offset for the year");

	/**
	 * The column <code>WETRN.MRKT_EST_WGHT.CMPGN_OFS_NR</code>. Offset for the campaign
	 */
	public final TableField<MrktEstWghtRecord, Short> CMPGN_OFS_NR = createField("CMPGN_OFS_NR", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaulted(true), this, "Offset for the campaign");

	/**
	 * The column <code>WETRN.MRKT_EST_WGHT.EST_RLTV_WGHT_PCT</code>. Estimate relative weighted percent.
	 */
	public final TableField<MrktEstWghtRecord, BigDecimal> EST_RLTV_WGHT_PCT = createField("EST_RLTV_WGHT_PCT", org.jooq.impl.SQLDataType.NUMERIC.precision(8, 3).defaulted(true), this, "Estimate relative weighted percent.");

	/**
	 * The column <code>WETRN.MRKT_EST_WGHT.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public final TableField<MrktEstWghtRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "The MAPS Application USER ID of the user (person or process) that created the row.");

	/**
	 * The column <code>WETRN.MRKT_EST_WGHT.CREAT_TS</code>. The date and time the row was created.
	 */
	public final TableField<MrktEstWghtRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was created.");

	/**
	 * The column <code>WETRN.MRKT_EST_WGHT.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public final TableField<MrktEstWghtRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "Contains the MAPS USER ID of the user (person or process) that last updated the row.");

	/**
	 * The column <code>WETRN.MRKT_EST_WGHT.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public final TableField<MrktEstWghtRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE, this, "The date and time the row was last updated.");

	/**
	 * Create a <code>WETRN.MRKT_EST_WGHT</code> table reference
	 */
	public MrktEstWght() {
		this("MRKT_EST_WGHT", null);
	}

	/**
	 * Create an aliased <code>WETRN.MRKT_EST_WGHT</code> table reference
	 */
	public MrktEstWght(String alias) {
		this(alias, MRKT_EST_WGHT);
	}

	private MrktEstWght(String alias, Table<MrktEstWghtRecord> aliased) {
		this(alias, aliased, null);
	}

	private MrktEstWght(String alias, Table<MrktEstWghtRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "Purpose: within the MAPS Marketing system, store the Estimate Relative Weighting Percentage (importance) for a Campaign.  The Campaign is stored here as a relative campaign i.e. starting at the latest Offset Anchor Sales Type (for example the latest Actual campaign), for the campaign that is offset by the number of plus or minus campaigns.  These are the weighting's to be applied to this campaign. -- Note: this Relative Weighting Percentage information is used to calculate the Real Weighting Percentage which can be viewed by the MAPS user in the MAPS Demand Planning screens when estimating Units demand for an Offer Concept. Because this is static data, it is not proposed to develop a screen to maintain this data.  Instead this will be configured by the MAPS IT team.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MrktEstWghtRecord> getPrimaryKey() {
		return Keys.PK_MRKT_EST_WGHT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MrktEstWghtRecord>> getKeys() {
		return Arrays.<UniqueKey<MrktEstWghtRecord>>asList(Keys.PK_MRKT_EST_WGHT);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<MrktEstWghtRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<MrktEstWghtRecord, ?>>asList(Keys.FK_MRKTPERD_MRKTESTWGHT, Keys.FK_ESTWGHTTYP_MRKTESTWGHT, Keys.FK_SLSTYPGRP_MRKTESTWGHT);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MrktEstWght as(String alias) {
		return new MrktEstWght(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MrktEstWght rename(String name) {
		return new MrktEstWght(name, null);
	}
}

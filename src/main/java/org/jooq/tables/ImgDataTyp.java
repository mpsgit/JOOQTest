/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.ImgDataTypRecord;


/**
 * Identifies the type of Data to be used
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImgDataTyp extends TableImpl<ImgDataTypRecord> {

	private static final long serialVersionUID = -1403862401;

	/**
	 * The reference instance of <code>WETRN.IMG_DATA_TYP</code>
	 */
	public static final ImgDataTyp IMG_DATA_TYP = new ImgDataTyp();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ImgDataTypRecord> getRecordType() {
		return ImgDataTypRecord.class;
	}

	/**
	 * The column <code>WETRN.IMG_DATA_TYP.IMG_DATA_TYP_ID</code>. ID that identifies the type of Data to be used
	 */
	public final TableField<ImgDataTypRecord, BigDecimal> IMG_DATA_TYP_ID = createField("IMG_DATA_TYP_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "ID that identifies the type of Data to be used");

	/**
	 * The column <code>WETRN.IMG_DATA_TYP.IMG_DATA_TYP_DESC_TXT</code>. Describes the type of Data to be used
	 */
	public final TableField<ImgDataTypRecord, String> IMG_DATA_TYP_DESC_TXT = createField("IMG_DATA_TYP_DESC_TXT", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "Describes the type of Data to be used");

	/**
	 * The column <code>WETRN.IMG_DATA_TYP.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public final TableField<ImgDataTypRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "The MAPS Application USER ID of the user (person or process) that created the row.");

	/**
	 * The column <code>WETRN.IMG_DATA_TYP.CREAT_TS</code>. The date and time the row was created.
	 */
	public final TableField<ImgDataTypRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was created.");

	/**
	 * The column <code>WETRN.IMG_DATA_TYP.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public final TableField<ImgDataTypRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "Contains the MAPS USER ID of the user (person or process) that last updated the row.");

	/**
	 * The column <code>WETRN.IMG_DATA_TYP.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public final TableField<ImgDataTypRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE, this, "The date and time the row was last updated.");

	/**
	 * Create a <code>WETRN.IMG_DATA_TYP</code> table reference
	 */
	public ImgDataTyp() {
		this("IMG_DATA_TYP", null);
	}

	/**
	 * Create an aliased <code>WETRN.IMG_DATA_TYP</code> table reference
	 */
	public ImgDataTyp(String alias) {
		this(alias, IMG_DATA_TYP);
	}

	private ImgDataTyp(String alias, Table<ImgDataTypRecord> aliased) {
		this(alias, aliased, null);
	}

	private ImgDataTyp(String alias, Table<ImgDataTypRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "Identifies the type of Data to be used");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ImgDataTypRecord> getPrimaryKey() {
		return Keys.PK_IMG_DATA_TYP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ImgDataTypRecord>> getKeys() {
		return Arrays.<UniqueKey<ImgDataTypRecord>>asList(Keys.PK_IMG_DATA_TYP);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImgDataTyp as(String alias) {
		return new ImgDataTyp(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ImgDataTyp rename(String name) {
		return new ImgDataTyp(name, null);
	}
}

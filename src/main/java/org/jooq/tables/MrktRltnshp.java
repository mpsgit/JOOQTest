/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.MrktRltnshpRecord;


/**
 * Market relationship.  The relationship between markets for the specified 
 * relationship type.  The relationship lasts from the start period until 
 * the end period.  A null end period means that the relationship lasts forever 
 * or until the next start period for the same market and relationship type. 
 *  There is no source market period.  The source/target campaign mapping 
 * is handled by the campaign mapping table.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MrktRltnshp extends TableImpl<MrktRltnshpRecord> {

	private static final long serialVersionUID = -1152017403;

	/**
	 * The reference instance of <code>WETRN.MRKT_RLTNSHP</code>
	 */
	public static final MrktRltnshp MRKT_RLTNSHP = new MrktRltnshp();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MrktRltnshpRecord> getRecordType() {
		return MrktRltnshpRecord.class;
	}

	/**
	 * The column <code>WETRN.MRKT_RLTNSHP.MRKT_ID</code>. Market id.  The market that is being mapped to a source market for the specified relationship type.
	 */
	public final TableField<MrktRltnshpRecord, BigDecimal> MRKT_ID = createField("MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Market id.  The market that is being mapped to a source market for the specified relationship type.");

	/**
	 * The column <code>WETRN.MRKT_RLTNSHP.MRKT_RLTNSHP_TYP_ID</code>. Market relationship type id.  Unique identifier for a market relationship type.
	 */
	public final TableField<MrktRltnshpRecord, BigDecimal> MRKT_RLTNSHP_TYP_ID = createField("MRKT_RLTNSHP_TYP_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Market relationship type id.  Unique identifier for a market relationship type.");

	/**
	 * The column <code>WETRN.MRKT_RLTNSHP.STRT_OFFR_PERD_ID</code>. Start offer period id.  The start period for the relationship.
	 */
	public final TableField<MrktRltnshpRecord, BigDecimal> STRT_OFFR_PERD_ID = createField("STRT_OFFR_PERD_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Start offer period id.  The start period for the relationship.");

	/**
	 * The column <code>WETRN.MRKT_RLTNSHP.END_OFFR_PERD_ID</code>. End offer period id.  The end period for the relationship.  A null end period means that the relationship lasts forever or until the next start period for the same market and relationship type.
	 */
	public final TableField<MrktRltnshpRecord, BigDecimal> END_OFFR_PERD_ID = createField("END_OFFR_PERD_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "End offer period id.  The end period for the relationship.  A null end period means that the relationship lasts forever or until the next start period for the same market and relationship type.");

	/**
	 * The column <code>WETRN.MRKT_RLTNSHP.SRCE_MRKT_ID</code>. Source market id.  The source market in the relationship.
	 */
	public final TableField<MrktRltnshpRecord, BigDecimal> SRCE_MRKT_ID = createField("SRCE_MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Source market id.  The source market in the relationship.");

	/**
	 * The column <code>WETRN.MRKT_RLTNSHP.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public final TableField<MrktRltnshpRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "The MAPS Application USER ID of the user (person or process) that created the row.");

	/**
	 * The column <code>WETRN.MRKT_RLTNSHP.CREAT_TS</code>. The date and time the row was created.
	 */
	public final TableField<MrktRltnshpRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was created.");

	/**
	 * The column <code>WETRN.MRKT_RLTNSHP.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public final TableField<MrktRltnshpRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "Contains the MAPS USER ID of the user (person or process) that last updated the row.");

	/**
	 * The column <code>WETRN.MRKT_RLTNSHP.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public final TableField<MrktRltnshpRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was last updated.");

	/**
	 * Create a <code>WETRN.MRKT_RLTNSHP</code> table reference
	 */
	public MrktRltnshp() {
		this("MRKT_RLTNSHP", null);
	}

	/**
	 * Create an aliased <code>WETRN.MRKT_RLTNSHP</code> table reference
	 */
	public MrktRltnshp(String alias) {
		this(alias, MRKT_RLTNSHP);
	}

	private MrktRltnshp(String alias, Table<MrktRltnshpRecord> aliased) {
		this(alias, aliased, null);
	}

	private MrktRltnshp(String alias, Table<MrktRltnshpRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "Market relationship.  The relationship between markets for the specified relationship type.  The relationship lasts from the start period until the end period.  A null end period means that the relationship lasts forever or until the next start period for the same market and relationship type.  There is no source market period.  The source/target campaign mapping is handled by the campaign mapping table.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MrktRltnshpRecord> getPrimaryKey() {
		return Keys.PK_MRKT_RLTNSHP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MrktRltnshpRecord>> getKeys() {
		return Arrays.<UniqueKey<MrktRltnshpRecord>>asList(Keys.PK_MRKT_RLTNSHP);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<MrktRltnshpRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<MrktRltnshpRecord, ?>>asList(Keys.FK_MRKTPERD_MRKTRLTNSHP_END, Keys.FK_MRKTPERD_MRKTRLTNSHP_STRT, Keys.FK_MRKT_MRKTRLTNSHP_SRCEMRKT);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MrktRltnshp as(String alias) {
		return new MrktRltnshp(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MrktRltnshp rename(String name) {
		return new MrktRltnshp(name, null);
	}
}

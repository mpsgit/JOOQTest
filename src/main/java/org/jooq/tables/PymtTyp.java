/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.PymtTypRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PymtTyp extends TableImpl<PymtTypRecord> {

	private static final long serialVersionUID = -1679583016;

	/**
	 * The reference instance of <code>WETRN.PYMT_TYP</code>
	 */
	public static final PymtTyp PYMT_TYP = new PymtTyp();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PymtTypRecord> getRecordType() {
		return PymtTypRecord.class;
	}

	/**
	 * The column <code>WETRN.PYMT_TYP.PYMT_TYP</code>.
	 */
	public final TableField<PymtTypRecord, String> PYMT_TYP_ = createField("PYMT_TYP", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>WETRN.PYMT_TYP.PYMT_TYP_DESC_TXT</code>.
	 */
	public final TableField<PymtTypRecord, String> PYMT_TYP_DESC_TXT = createField("PYMT_TYP_DESC_TXT", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>WETRN.PYMT_TYP.CREAT_USER_ID</code>.
	 */
	public final TableField<PymtTypRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>WETRN.PYMT_TYP.CREAT_TS</code>.
	 */
	public final TableField<PymtTypRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>WETRN.PYMT_TYP.LAST_UPDT_USER_ID</code>.
	 */
	public final TableField<PymtTypRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "");

	/**
	 * The column <code>WETRN.PYMT_TYP.LAST_UPDT_TS</code>.
	 */
	public final TableField<PymtTypRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>WETRN.PYMT_TYP.DFALT_PYMT_TYP_IND</code>.
	 */
	public final TableField<PymtTypRecord, String> DFALT_PYMT_TYP_IND = createField("DFALT_PYMT_TYP_IND", org.jooq.impl.SQLDataType.CHAR.length(1), this, "");

	/**
	 * The column <code>WETRN.PYMT_TYP.SEQ_NR</code>.
	 */
	public final TableField<PymtTypRecord, BigDecimal> SEQ_NR = createField("SEQ_NR", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>WETRN.PYMT_TYP.PYMT_TYP_GRP_ID</code>.
	 */
	public final TableField<PymtTypRecord, BigDecimal> PYMT_TYP_GRP_ID = createField("PYMT_TYP_GRP_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>WETRN.PYMT_TYP.INSTLMT_QTY</code>. Payment Quantity
	 */
	public final TableField<PymtTypRecord, Short> INSTLMT_QTY = createField("INSTLMT_QTY", org.jooq.impl.SQLDataType.SMALLINT.defaulted(true), this, "Payment Quantity");

	/**
	 * Create a <code>WETRN.PYMT_TYP</code> table reference
	 */
	public PymtTyp() {
		this("PYMT_TYP", null);
	}

	/**
	 * Create an aliased <code>WETRN.PYMT_TYP</code> table reference
	 */
	public PymtTyp(String alias) {
		this(alias, PYMT_TYP);
	}

	private PymtTyp(String alias, Table<PymtTypRecord> aliased) {
		this(alias, aliased, null);
	}

	private PymtTyp(String alias, Table<PymtTypRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PymtTypRecord> getPrimaryKey() {
		return Keys.PK_PYMT_TYP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PymtTypRecord>> getKeys() {
		return Arrays.<UniqueKey<PymtTypRecord>>asList(Keys.PK_PYMT_TYP);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PymtTypRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PymtTypRecord, ?>>asList(Keys.FK_PYMTTYPGRP_PYMTTYP);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PymtTyp as(String alias) {
		return new PymtTyp(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PymtTyp rename(String name) {
		return new PymtTyp(name, null);
	}
}

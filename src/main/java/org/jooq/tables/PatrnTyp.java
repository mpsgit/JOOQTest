/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.PatrnTypRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatrnTyp extends TableImpl<PatrnTypRecord> {

	private static final long serialVersionUID = -1244083176;

	/**
	 * The reference instance of <code>WETRN.PATRN_TYP</code>
	 */
	public static final PatrnTyp PATRN_TYP = new PatrnTyp();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PatrnTypRecord> getRecordType() {
		return PatrnTypRecord.class;
	}

	/**
	 * The column <code>WETRN.PATRN_TYP.MRKT_ID</code>.
	 */
	public final TableField<PatrnTypRecord, BigDecimal> MRKT_ID = createField("MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>WETRN.PATRN_TYP.PATRN_TYP_ID</code>.
	 */
	public final TableField<PatrnTypRecord, BigDecimal> PATRN_TYP_ID = createField("PATRN_TYP_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>WETRN.PATRN_TYP.PATRN_TYP_DESC_TXT</code>.
	 */
	public final TableField<PatrnTypRecord, String> PATRN_TYP_DESC_TXT = createField("PATRN_TYP_DESC_TXT", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>WETRN.PATRN_TYP.ENBLD_IND</code>.
	 */
	public final TableField<PatrnTypRecord, String> ENBLD_IND = createField("ENBLD_IND", org.jooq.impl.SQLDataType.CHAR.length(1), this, "");

	/**
	 * The column <code>WETRN.PATRN_TYP.CREAT_USER_ID</code>.
	 */
	public final TableField<PatrnTypRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>WETRN.PATRN_TYP.CREAT_TS</code>.
	 */
	public final TableField<PatrnTypRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>WETRN.PATRN_TYP.LAST_UPDT_USER_ID</code>.
	 */
	public final TableField<PatrnTypRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "");

	/**
	 * The column <code>WETRN.PATRN_TYP.LAST_UPDT_TS</code>.
	 */
	public final TableField<PatrnTypRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>WETRN.PATRN_TYP.PATRN_LEN</code>. Maximum length of the pattern
	 */
	public final TableField<PatrnTypRecord, BigDecimal> PATRN_LEN = createField("PATRN_LEN", org.jooq.impl.SQLDataType.NUMERIC, this, "Maximum length of the pattern");

	/**
	 * The column <code>WETRN.PATRN_TYP.CMPGN_DFRNC_MIN</code>. COD - COI diffence (inclusive) lower threshold 
	 */
	public final TableField<PatrnTypRecord, BigDecimal> CMPGN_DFRNC_MIN = createField("CMPGN_DFRNC_MIN", org.jooq.impl.SQLDataType.NUMERIC, this, "COD - COI diffence (inclusive) lower threshold ");

	/**
	 * The column <code>WETRN.PATRN_TYP.CMPGN_DFRNC_MAX</code>. COD - COI diffence (inclusive) upper threshold 
	 */
	public final TableField<PatrnTypRecord, BigDecimal> CMPGN_DFRNC_MAX = createField("CMPGN_DFRNC_MAX", org.jooq.impl.SQLDataType.NUMERIC, this, "COD - COI diffence (inclusive) upper threshold ");

	/**
	 * The column <code>WETRN.PATRN_TYP.CFT</code>.
	 */
	public final TableField<PatrnTypRecord, String> CFT = createField("CFT", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>WETRN.PATRN_TYP</code> table reference
	 */
	public PatrnTyp() {
		this("PATRN_TYP", null);
	}

	/**
	 * Create an aliased <code>WETRN.PATRN_TYP</code> table reference
	 */
	public PatrnTyp(String alias) {
		this(alias, PATRN_TYP);
	}

	private PatrnTyp(String alias, Table<PatrnTypRecord> aliased) {
		this(alias, aliased, null);
	}

	private PatrnTyp(String alias, Table<PatrnTypRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PatrnTyp as(String alias) {
		return new PatrnTyp(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PatrnTyp rename(String name) {
		return new PatrnTyp(name, null);
	}
}

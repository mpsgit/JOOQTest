/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.DlyBilngCntrlRecord;


/**
 * Daily billing control.  Set of billing system rules for each DLY_BILNG_MTCH_ID. 
 *  Either a different billing system or change to interface file or possible 
 * attribute values.  MRKT_EFF_SLS_PERD.DLY_BILNG_MTCH_ID indicates which 
 * DLY_BILNG_MTCH is used by which markets for which sales periods.  Many 
 * markets can use the same DLY_BILNG_MTCH.  Many DLY_BILNG_MTCH can be used 
 * by the same market for different sales periods.  E.g. when changing from 
 * one set of matching rules to another or from one system to another.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DlyBilngCntrl extends TableImpl<DlyBilngCntrlRecord> {

	private static final long serialVersionUID = 691212018;

	/**
	 * The reference instance of <code>WETRN.DLY_BILNG_CNTRL</code>
	 */
	public static final DlyBilngCntrl DLY_BILNG_CNTRL = new DlyBilngCntrl();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DlyBilngCntrlRecord> getRecordType() {
		return DlyBilngCntrlRecord.class;
	}

	/**
	 * The column <code>WETRN.DLY_BILNG_CNTRL.DLY_BILNG_MTCH_ID</code>. DAILY BILLING MATCH ID - Identifies a unique set of daily billing matching rules.  Either a different billing system or change to interface file or change to set of rules.
	 */
	public final TableField<DlyBilngCntrlRecord, BigDecimal> DLY_BILNG_MTCH_ID = createField("DLY_BILNG_MTCH_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "DAILY BILLING MATCH ID - Identifies a unique set of daily billing matching rules.  Either a different billing system or change to interface file or change to set of rules.");

	/**
	 * The column <code>WETRN.DLY_BILNG_CNTRL.LCL_BILNG_ACTN_CD</code>.
	 */
	public final TableField<DlyBilngCntrlRecord, String> LCL_BILNG_ACTN_CD = createField("LCL_BILNG_ACTN_CD", org.jooq.impl.SQLDataType.VARCHAR.length(2).nullable(false), this, "");

	/**
	 * The column <code>WETRN.DLY_BILNG_CNTRL.LCL_BILNG_TRAN_TYP</code>.
	 */
	public final TableField<DlyBilngCntrlRecord, String> LCL_BILNG_TRAN_TYP = createField("LCL_BILNG_TRAN_TYP", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

	/**
	 * The column <code>WETRN.DLY_BILNG_CNTRL.LCL_BILNG_OFFR_TYP</code>.
	 */
	public final TableField<DlyBilngCntrlRecord, String> LCL_BILNG_OFFR_TYP = createField("LCL_BILNG_OFFR_TYP", org.jooq.impl.SQLDataType.CHAR.length(2), this, "");

	/**
	 * The column <code>WETRN.DLY_BILNG_CNTRL.LCL_BILNG_DEFRD_CD</code>.
	 */
	public final TableField<DlyBilngCntrlRecord, String> LCL_BILNG_DEFRD_CD = createField("LCL_BILNG_DEFRD_CD", org.jooq.impl.SQLDataType.CHAR.length(1), this, "");

	/**
	 * The column <code>WETRN.DLY_BILNG_CNTRL.LCL_BILNG_SHPNG_CD</code>.
	 */
	public final TableField<DlyBilngCntrlRecord, String> LCL_BILNG_SHPNG_CD = createField("LCL_BILNG_SHPNG_CD", org.jooq.impl.SQLDataType.CHAR.length(1), this, "");

	/**
	 * The column <code>WETRN.DLY_BILNG_CNTRL.SLS_TYP_ID</code>.
	 */
	public final TableField<DlyBilngCntrlRecord, BigDecimal> SLS_TYP_ID = createField("SLS_TYP_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>WETRN.DLY_BILNG_CNTRL.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public final TableField<DlyBilngCntrlRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "The MAPS Application USER ID of the user (person or process) that created the row.");

	/**
	 * The column <code>WETRN.DLY_BILNG_CNTRL.CREAT_TS</code>. The date and time the row was created.
	 */
	public final TableField<DlyBilngCntrlRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was created.");

	/**
	 * The column <code>WETRN.DLY_BILNG_CNTRL.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public final TableField<DlyBilngCntrlRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "Contains the MAPS USER ID of the user (person or process) that last updated the row.");

	/**
	 * The column <code>WETRN.DLY_BILNG_CNTRL.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public final TableField<DlyBilngCntrlRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was last updated.");

	/**
	 * Create a <code>WETRN.DLY_BILNG_CNTRL</code> table reference
	 */
	public DlyBilngCntrl() {
		this("DLY_BILNG_CNTRL", null);
	}

	/**
	 * Create an aliased <code>WETRN.DLY_BILNG_CNTRL</code> table reference
	 */
	public DlyBilngCntrl(String alias) {
		this(alias, DLY_BILNG_CNTRL);
	}

	private DlyBilngCntrl(String alias, Table<DlyBilngCntrlRecord> aliased) {
		this(alias, aliased, null);
	}

	private DlyBilngCntrl(String alias, Table<DlyBilngCntrlRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "Daily billing control.  Set of billing system rules for each DLY_BILNG_MTCH_ID.  Either a different billing system or change to interface file or possible attribute values.  MRKT_EFF_SLS_PERD.DLY_BILNG_MTCH_ID indicates which DLY_BILNG_MTCH is used by which markets for which sales periods.  Many markets can use the same DLY_BILNG_MTCH.  Many DLY_BILNG_MTCH can be used by the same market for different sales periods.  E.g. when changing from one set of matching rules to another or from one system to another.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<DlyBilngCntrlRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<DlyBilngCntrlRecord, ?>>asList(Keys.FK_DLYBILNGMTCH_DLYBILNGCNTRL, Keys.FK_SLSTYP_DLYBILNGCNTRL);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngCntrl as(String alias) {
		return new DlyBilngCntrl(alias, this);
	}

	/**
	 * Rename this table
	 */
	public DlyBilngCntrl rename(String name) {
		return new DlyBilngCntrl(name, null);
	}
}

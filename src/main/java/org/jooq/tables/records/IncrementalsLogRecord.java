/**
 * This class is generated by jOOQ
 */
package org.jooq.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;
import org.jooq.tables.IncrementalsLog;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IncrementalsLogRecord extends TableRecordImpl<IncrementalsLogRecord> implements Record2<String, Date> {

	private static final long serialVersionUID = -1067778244;

	/**
	 * Setter for <code>WETRN.INCREMENTALS_LOG.HIERARCHY_NAME</code>.
	 */
	public void setHierarchyName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>WETRN.INCREMENTALS_LOG.HIERARCHY_NAME</code>.
	 */
	public String getHierarchyName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>WETRN.INCREMENTALS_LOG.LAST_EXPORT_TS</code>.
	 */
	public void setLastExportTs(Date value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>WETRN.INCREMENTALS_LOG.LAST_EXPORT_TS</code>.
	 */
	public Date getLastExportTs() {
		return (Date) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, Date> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, Date> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return IncrementalsLog.INCREMENTALS_LOG.HIERARCHY_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field2() {
		return IncrementalsLog.INCREMENTALS_LOG.LAST_EXPORT_TS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getHierarchyName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value2() {
		return getLastExportTs();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IncrementalsLogRecord value1(String value) {
		setHierarchyName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IncrementalsLogRecord value2(Date value) {
		setLastExportTs(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IncrementalsLogRecord values(String value1, Date value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached IncrementalsLogRecord
	 */
	public IncrementalsLogRecord() {
		super(IncrementalsLog.INCREMENTALS_LOG);
	}

	/**
	 * Create a detached, initialised IncrementalsLogRecord
	 */
	public IncrementalsLogRecord(String hierarchyName, Date lastExportTs) {
		super(IncrementalsLog.INCREMENTALS_LOG);

		setValue(0, hierarchyName);
		setValue(1, lastExportTs);
	}
}

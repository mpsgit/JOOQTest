/**
 * This class is generated by jOOQ
 */
package org.jooq.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.tables.MessageTransaction;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageTransactionRecord extends UpdatableRecordImpl<MessageTransactionRecord> implements Record8<Long, String, Short, String, Date, Date, Short, String> {

	private static final long serialVersionUID = 86017679;

	/**
	 * Setter for <code>WETRN.MESSAGE_TRANSACTION.MESSAGE_TRANSACTION_ID</code>.
	 */
	public void setMessageTransactionId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>WETRN.MESSAGE_TRANSACTION.MESSAGE_TRANSACTION_ID</code>.
	 */
	public Long getMessageTransactionId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>WETRN.MESSAGE_TRANSACTION.NAMESPACE</code>.
	 */
	public void setNamespace(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>WETRN.MESSAGE_TRANSACTION.NAMESPACE</code>.
	 */
	public String getNamespace() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>WETRN.MESSAGE_TRANSACTION.MESSAGE_LEVEL</code>.
	 */
	public void setMessageLevel(Short value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>WETRN.MESSAGE_TRANSACTION.MESSAGE_LEVEL</code>.
	 */
	public Short getMessageLevel() {
		return (Short) getValue(2);
	}

	/**
	 * Setter for <code>WETRN.MESSAGE_TRANSACTION.XML</code>.
	 */
	public void setXml(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>WETRN.MESSAGE_TRANSACTION.XML</code>.
	 */
	public String getXml() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>WETRN.MESSAGE_TRANSACTION.DATE_CREATED</code>.
	 */
	public void setDateCreated(Date value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>WETRN.MESSAGE_TRANSACTION.DATE_CREATED</code>.
	 */
	public Date getDateCreated() {
		return (Date) getValue(4);
	}

	/**
	 * Setter for <code>WETRN.MESSAGE_TRANSACTION.LAST_PROCESS_DATE</code>.
	 */
	public void setLastProcessDate(Date value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>WETRN.MESSAGE_TRANSACTION.LAST_PROCESS_DATE</code>.
	 */
	public Date getLastProcessDate() {
		return (Date) getValue(5);
	}

	/**
	 * Setter for <code>WETRN.MESSAGE_TRANSACTION.REPROCESS_COUNT</code>.
	 */
	public void setReprocessCount(Short value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>WETRN.MESSAGE_TRANSACTION.REPROCESS_COUNT</code>.
	 */
	public Short getReprocessCount() {
		return (Short) getValue(6);
	}

	/**
	 * Setter for <code>WETRN.MESSAGE_TRANSACTION.ERROR_MESSAGE</code>.
	 */
	public void setErrorMessage(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>WETRN.MESSAGE_TRANSACTION.ERROR_MESSAGE</code>.
	 */
	public String getErrorMessage() {
		return (String) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Long, String, Short, String, Date, Date, Short, String> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Long, String, Short, String, Date, Date, Short, String> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return MessageTransaction.MESSAGE_TRANSACTION.MESSAGE_TRANSACTION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return MessageTransaction.MESSAGE_TRANSACTION.NAMESPACE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field3() {
		return MessageTransaction.MESSAGE_TRANSACTION.MESSAGE_LEVEL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return MessageTransaction.MESSAGE_TRANSACTION.XML;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field5() {
		return MessageTransaction.MESSAGE_TRANSACTION.DATE_CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field6() {
		return MessageTransaction.MESSAGE_TRANSACTION.LAST_PROCESS_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field7() {
		return MessageTransaction.MESSAGE_TRANSACTION.REPROCESS_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return MessageTransaction.MESSAGE_TRANSACTION.ERROR_MESSAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getMessageTransactionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getNamespace();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value3() {
		return getMessageLevel();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getXml();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value5() {
		return getDateCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value6() {
		return getLastProcessDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value7() {
		return getReprocessCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getErrorMessage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MessageTransactionRecord value1(Long value) {
		setMessageTransactionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MessageTransactionRecord value2(String value) {
		setNamespace(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MessageTransactionRecord value3(Short value) {
		setMessageLevel(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MessageTransactionRecord value4(String value) {
		setXml(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MessageTransactionRecord value5(Date value) {
		setDateCreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MessageTransactionRecord value6(Date value) {
		setLastProcessDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MessageTransactionRecord value7(Short value) {
		setReprocessCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MessageTransactionRecord value8(String value) {
		setErrorMessage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MessageTransactionRecord values(Long value1, String value2, Short value3, String value4, Date value5, Date value6, Short value7, String value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MessageTransactionRecord
	 */
	public MessageTransactionRecord() {
		super(MessageTransaction.MESSAGE_TRANSACTION);
	}

	/**
	 * Create a detached, initialised MessageTransactionRecord
	 */
	public MessageTransactionRecord(Long messageTransactionId, String namespace, Short messageLevel, String xml, Date dateCreated, Date lastProcessDate, Short reprocessCount, String errorMessage) {
		super(MessageTransaction.MESSAGE_TRANSACTION);

		setValue(0, messageTransactionId);
		setValue(1, namespace);
		setValue(2, messageLevel);
		setValue(3, xml);
		setValue(4, dateCreated);
		setValue(5, lastProcessDate);
		setValue(6, reprocessCount);
		setValue(7, errorMessage);
	}
}

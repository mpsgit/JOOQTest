/**
 * This class is generated by jOOQ
 */
package org.jooq.tables.records;


import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Record6;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.tables.DlyBilngFscSplt;


/**
 * Daily Billing FSC Split.  Data provided by the users to indicate how one 
 * (dummy) FSC is to be split into many valid FSCs.  The sum of original units 
 * in dly_bilng are split across the target FSCs according to the ratio of 
 * units in dly_bilng_fsc_splt for the same SRCE_FSC,SLS_PRC,NR_FOR.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DlyBilngFscSpltRecord extends UpdatableRecordImpl<DlyBilngFscSpltRecord> implements Record11<BigDecimal, BigDecimal, String, BigDecimal, Short, String, Integer, String, Date, String, Date> {

	private static final long serialVersionUID = -720749257;

	/**
	 * Setter for <code>WETRN.DLY_BILNG_FSC_SPLT.MRKT_ID</code>. An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.
	 */
	public void setMrktId(BigDecimal value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>WETRN.DLY_BILNG_FSC_SPLT.MRKT_ID</code>. An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.
	 */
	public BigDecimal getMrktId() {
		return (BigDecimal) getValue(0);
	}

	/**
	 * Setter for <code>WETRN.DLY_BILNG_FSC_SPLT.SLS_PERD_ID</code>. A unique surrogate identifier for a Campaign, Quarter or Annual Period.
	 */
	public void setSlsPerdId(BigDecimal value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>WETRN.DLY_BILNG_FSC_SPLT.SLS_PERD_ID</code>. A unique surrogate identifier for a Campaign, Quarter or Annual Period.
	 */
	public BigDecimal getSlsPerdId() {
		return (BigDecimal) getValue(1);
	}

	/**
	 * Setter for <code>WETRN.DLY_BILNG_FSC_SPLT.SRCE_FSC_CD</code>. Source FSC.  The dummy FSC supplied by the billing system (in dly_bilng).
	 */
	public void setSrceFscCd(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>WETRN.DLY_BILNG_FSC_SPLT.SRCE_FSC_CD</code>. Source FSC.  The dummy FSC supplied by the billing system (in dly_bilng).
	 */
	public String getSrceFscCd() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>WETRN.DLY_BILNG_FSC_SPLT.SLS_PRC_AMT</code>. Sales price amount.  The sales price for matching to the dly_bilng data.
	 */
	public void setSlsPrcAmt(BigDecimal value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>WETRN.DLY_BILNG_FSC_SPLT.SLS_PRC_AMT</code>. Sales price amount.  The sales price for matching to the dly_bilng data.
	 */
	public BigDecimal getSlsPrcAmt() {
		return (BigDecimal) getValue(3);
	}

	/**
	 * Setter for <code>WETRN.DLY_BILNG_FSC_SPLT.NR_FOR_QTY</code>. Number for quantity.  The number for quantity for matching to the dly_bilng data.
	 */
	public void setNrForQty(Short value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>WETRN.DLY_BILNG_FSC_SPLT.NR_FOR_QTY</code>. Number for quantity.  The number for quantity for matching to the dly_bilng data.
	 */
	public Short getNrForQty() {
		return (Short) getValue(4);
	}

	/**
	 * Setter for <code>WETRN.DLY_BILNG_FSC_SPLT.TRGT_FSC_CD</code>. Target FSC.  The real FSC that should match to a marketing item planned in an offer.  There are one or many 'target' FSCs for each 'source' FSC (at the same sales price and number for).
	 */
	public void setTrgtFscCd(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>WETRN.DLY_BILNG_FSC_SPLT.TRGT_FSC_CD</code>. Target FSC.  The real FSC that should match to a marketing item planned in an offer.  There are one or many 'target' FSCs for each 'source' FSC (at the same sales price and number for).
	 */
	public String getTrgtFscCd() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>WETRN.DLY_BILNG_FSC_SPLT.UNIT_QTY</code>. Unit quantity.  The quantity for the target FSC.  The sum(unit_qty) for each source FSC (and sls_prc_amt and nr_for_qty) must match the sum(unit_qty) for the related dly_bilng rows.  Each UNIT_QTY is used to calculate the split percentage for the target FSCs.
	 */
	public void setUnitQty(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>WETRN.DLY_BILNG_FSC_SPLT.UNIT_QTY</code>. Unit quantity.  The quantity for the target FSC.  The sum(unit_qty) for each source FSC (and sls_prc_amt and nr_for_qty) must match the sum(unit_qty) for the related dly_bilng rows.  Each UNIT_QTY is used to calculate the split percentage for the target FSCs.
	 */
	public Integer getUnitQty() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>WETRN.DLY_BILNG_FSC_SPLT.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public void setCreatUserId(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>WETRN.DLY_BILNG_FSC_SPLT.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public String getCreatUserId() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>WETRN.DLY_BILNG_FSC_SPLT.CREAT_TS</code>. The date and time the row was created.
	 */
	public void setCreatTs(Date value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>WETRN.DLY_BILNG_FSC_SPLT.CREAT_TS</code>. The date and time the row was created.
	 */
	public Date getCreatTs() {
		return (Date) getValue(8);
	}

	/**
	 * Setter for <code>WETRN.DLY_BILNG_FSC_SPLT.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public void setLastUpdtUserId(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>WETRN.DLY_BILNG_FSC_SPLT.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public String getLastUpdtUserId() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>WETRN.DLY_BILNG_FSC_SPLT.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public void setLastUpdtTs(Date value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>WETRN.DLY_BILNG_FSC_SPLT.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public Date getLastUpdtTs() {
		return (Date) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record6<BigDecimal, BigDecimal, String, BigDecimal, Short, String> key() {
		return (Record6) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<BigDecimal, BigDecimal, String, BigDecimal, Short, String, Integer, String, Date, String, Date> fieldsRow() {
		return (Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<BigDecimal, BigDecimal, String, BigDecimal, Short, String, Integer, String, Date, String, Date> valuesRow() {
		return (Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field1() {
		return DlyBilngFscSplt.DLY_BILNG_FSC_SPLT.MRKT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field2() {
		return DlyBilngFscSplt.DLY_BILNG_FSC_SPLT.SLS_PERD_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return DlyBilngFscSplt.DLY_BILNG_FSC_SPLT.SRCE_FSC_CD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field4() {
		return DlyBilngFscSplt.DLY_BILNG_FSC_SPLT.SLS_PRC_AMT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field5() {
		return DlyBilngFscSplt.DLY_BILNG_FSC_SPLT.NR_FOR_QTY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return DlyBilngFscSplt.DLY_BILNG_FSC_SPLT.TRGT_FSC_CD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return DlyBilngFscSplt.DLY_BILNG_FSC_SPLT.UNIT_QTY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return DlyBilngFscSplt.DLY_BILNG_FSC_SPLT.CREAT_USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field9() {
		return DlyBilngFscSplt.DLY_BILNG_FSC_SPLT.CREAT_TS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return DlyBilngFscSplt.DLY_BILNG_FSC_SPLT.LAST_UPDT_USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field11() {
		return DlyBilngFscSplt.DLY_BILNG_FSC_SPLT.LAST_UPDT_TS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value1() {
		return getMrktId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value2() {
		return getSlsPerdId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getSrceFscCd();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value4() {
		return getSlsPrcAmt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value5() {
		return getNrForQty();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getTrgtFscCd();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getUnitQty();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getCreatUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value9() {
		return getCreatTs();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getLastUpdtUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value11() {
		return getLastUpdtTs();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord value1(BigDecimal value) {
		setMrktId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord value2(BigDecimal value) {
		setSlsPerdId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord value3(String value) {
		setSrceFscCd(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord value4(BigDecimal value) {
		setSlsPrcAmt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord value5(Short value) {
		setNrForQty(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord value6(String value) {
		setTrgtFscCd(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord value7(Integer value) {
		setUnitQty(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord value8(String value) {
		setCreatUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord value9(Date value) {
		setCreatTs(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord value10(String value) {
		setLastUpdtUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord value11(Date value) {
		setLastUpdtTs(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DlyBilngFscSpltRecord values(BigDecimal value1, BigDecimal value2, String value3, BigDecimal value4, Short value5, String value6, Integer value7, String value8, Date value9, String value10, Date value11) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached DlyBilngFscSpltRecord
	 */
	public DlyBilngFscSpltRecord() {
		super(DlyBilngFscSplt.DLY_BILNG_FSC_SPLT);
	}

	/**
	 * Create a detached, initialised DlyBilngFscSpltRecord
	 */
	public DlyBilngFscSpltRecord(BigDecimal mrktId, BigDecimal slsPerdId, String srceFscCd, BigDecimal slsPrcAmt, Short nrForQty, String trgtFscCd, Integer unitQty, String creatUserId, Date creatTs, String lastUpdtUserId, Date lastUpdtTs) {
		super(DlyBilngFscSplt.DLY_BILNG_FSC_SPLT);

		setValue(0, mrktId);
		setValue(1, slsPerdId);
		setValue(2, srceFscCd);
		setValue(3, slsPrcAmt);
		setValue(4, nrForQty);
		setValue(5, trgtFscCd);
		setValue(6, unitQty);
		setValue(7, creatUserId);
		setValue(8, creatTs);
		setValue(9, lastUpdtUserId);
		setValue(10, lastUpdtTs);
	}
}

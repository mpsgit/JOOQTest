/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.XchngRteRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XchngRte extends TableImpl<XchngRteRecord> {

	private static final long serialVersionUID = 1911844758;

	/**
	 * The reference instance of <code>WETRN.XCHNG_RTE</code>
	 */
	public static final XchngRte XCHNG_RTE = new XchngRte();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<XchngRteRecord> getRecordType() {
		return XchngRteRecord.class;
	}

	/**
	 * The column <code>WETRN.XCHNG_RTE.CRNCY_CD</code>.
	 */
	public final TableField<XchngRteRecord, String> CRNCY_CD = createField("CRNCY_CD", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>WETRN.XCHNG_RTE.MRKT_ID</code>.
	 */
	public final TableField<XchngRteRecord, BigDecimal> MRKT_ID = createField("MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>WETRN.XCHNG_RTE.XCHNG_RTE_TYP</code>.
	 */
	public final TableField<XchngRteRecord, String> XCHNG_RTE_TYP = createField("XCHNG_RTE_TYP", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>WETRN.XCHNG_RTE.PERD_ID</code>.
	 */
	public final TableField<XchngRteRecord, BigDecimal> PERD_ID = createField("PERD_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>WETRN.XCHNG_RTE.WGHTD_AVG_US_DLR_RTE</code>.
	 */
	public final TableField<XchngRteRecord, BigDecimal> WGHTD_AVG_US_DLR_RTE = createField("WGHTD_AVG_US_DLR_RTE", org.jooq.impl.SQLDataType.NUMERIC.precision(18, 6), this, "");

	/**
	 * The column <code>WETRN.XCHNG_RTE.CREAT_USER_ID</code>.
	 */
	public final TableField<XchngRteRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>WETRN.XCHNG_RTE.CREAT_TS</code>.
	 */
	public final TableField<XchngRteRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>WETRN.XCHNG_RTE.LAST_UPDT_USER_ID</code>.
	 */
	public final TableField<XchngRteRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "");

	/**
	 * The column <code>WETRN.XCHNG_RTE.LAST_UPDT_TS</code>.
	 */
	public final TableField<XchngRteRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>WETRN.XCHNG_RTE.CURRNT_RATE_IND</code>.
	 */
	public final TableField<XchngRteRecord, String> CURRNT_RATE_IND = createField("CURRNT_RATE_IND", org.jooq.impl.SQLDataType.CHAR.length(1), this, "");

	/**
	 * Create a <code>WETRN.XCHNG_RTE</code> table reference
	 */
	public XchngRte() {
		this("XCHNG_RTE", null);
	}

	/**
	 * Create an aliased <code>WETRN.XCHNG_RTE</code> table reference
	 */
	public XchngRte(String alias) {
		this(alias, XCHNG_RTE);
	}

	private XchngRte(String alias, Table<XchngRteRecord> aliased) {
		this(alias, aliased, null);
	}

	private XchngRte(String alias, Table<XchngRteRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<XchngRteRecord> getPrimaryKey() {
		return Keys.PK_XCHNG_RTE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<XchngRteRecord>> getKeys() {
		return Arrays.<UniqueKey<XchngRteRecord>>asList(Keys.PK_XCHNG_RTE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<XchngRteRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<XchngRteRecord, ?>>asList(Keys.FK_CRNCY_XCHNGRTE, Keys.FK_MRKTPERD_XCHNGRTE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public XchngRte as(String alias) {
		return new XchngRte(alias, this);
	}

	/**
	 * Rename this table
	 */
	public XchngRte rename(String name) {
		return new XchngRte(name, null);
	}
}

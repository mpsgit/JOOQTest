/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.MrktEffSlsPerdRecord;


/**
 * Parameters at MRKT+SLS_PERD level that do not change every SLS_PERD.  De-normalised 
 * table containing all parameters at this level that would be in individual 
 * tables if fully normalised.  Any parameters not changing must be copied 
 * to the new row where a parameter is changing.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MrktEffSlsPerd extends TableImpl<MrktEffSlsPerdRecord> {

	private static final long serialVersionUID = 2041691668;

	/**
	 * The reference instance of <code>WETRN.MRKT_EFF_SLS_PERD</code>
	 */
	public static final MrktEffSlsPerd MRKT_EFF_SLS_PERD = new MrktEffSlsPerd();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MrktEffSlsPerdRecord> getRecordType() {
		return MrktEffSlsPerdRecord.class;
	}

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.MRKT_ID</code>.
	 */
	public final TableField<MrktEffSlsPerdRecord, BigDecimal> MRKT_ID = createField("MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.EFF_SLS_PERD_ID</code>.
	 */
	public final TableField<MrktEffSlsPerdRecord, BigDecimal> EFF_SLS_PERD_ID = createField("EFF_SLS_PERD_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.DLY_BILNG_MTCH_ID</code>.
	 */
	public final TableField<MrktEffSlsPerdRecord, BigDecimal> DLY_BILNG_MTCH_ID = createField("DLY_BILNG_MTCH_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.BILNG_SYS_GRP_LEAD_MRKT_ID</code>.
	 */
	public final TableField<MrktEffSlsPerdRecord, BigDecimal> BILNG_SYS_GRP_LEAD_MRKT_ID = createField("BILNG_SYS_GRP_LEAD_MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.UNIT_PRC_MTCH_IND</code>.
	 */
	public final TableField<MrktEffSlsPerdRecord, String> UNIT_PRC_MTCH_IND = createField("UNIT_PRC_MTCH_IND", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.UNIT_PRC_AUTO_MTCH_TOLR_AMT</code>. Unit price tolerance for auto match.  Only applies if UNIT_PRC_MTCH_IND = 'Y'.
	 */
	public final TableField<MrktEffSlsPerdRecord, BigDecimal> UNIT_PRC_AUTO_MTCH_TOLR_AMT = createField("UNIT_PRC_AUTO_MTCH_TOLR_AMT", org.jooq.impl.SQLDataType.NUMERIC.nullable(false).defaulted(true), this, "Unit price tolerance for auto match.  Only applies if UNIT_PRC_MTCH_IND = 'Y'.");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.UNIT_PRC_MANUL_MTCH_TOLR_AMT</code>. Unit price tolerance for suggested manual match.  Only applies if UNIT_PRC_MTCH_IND = 'Y'.
	 */
	public final TableField<MrktEffSlsPerdRecord, BigDecimal> UNIT_PRC_MANUL_MTCH_TOLR_AMT = createField("UNIT_PRC_MANUL_MTCH_TOLR_AMT", org.jooq.impl.SQLDataType.NUMERIC.nullable(false).defaulted(true), this, "Unit price tolerance for suggested manual match.  Only applies if UNIT_PRC_MTCH_IND = 'Y'.");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.LINE_NR_USED_IND</code>. Indicates if market is using line numbers.  Valid values are {'N'|'Y'}.
	 */
	public final TableField<MrktEffSlsPerdRecord, String> LINE_NR_USED_IND = createField("LINE_NR_USED_IND", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false), this, "Indicates if market is using line numbers.  Valid values are {'N'|'Y'}.");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.UNPLND_OFFR_AVG_SLS_PRC_IND</code>. Indicates if unplanned offers are created with average sales price.
	 */
	public final TableField<MrktEffSlsPerdRecord, String> UNPLND_OFFR_AVG_SLS_PRC_IND = createField("UNPLND_OFFR_AVG_SLS_PRC_IND", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false), this, "Indicates if unplanned offers are created with average sales price.");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.USE_CLSTR_LVL_FSC_SKU_IND</code>. Indicates if FSC to SKU mapping is attempted at cluster level if not found at market level.
	 */
	public final TableField<MrktEffSlsPerdRecord, String> USE_CLSTR_LVL_FSC_SKU_IND = createField("USE_CLSTR_LVL_FSC_SKU_IND", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false), this, "Indicates if FSC to SKU mapping is attempted at cluster level if not found at market level.");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public final TableField<MrktEffSlsPerdRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "The MAPS Application USER ID of the user (person or process) that created the row.");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.CREAT_TS</code>. The date and time the row was created.
	 */
	public final TableField<MrktEffSlsPerdRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was created.");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public final TableField<MrktEffSlsPerdRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "Contains the MAPS USER ID of the user (person or process) that last updated the row.");

	/**
	 * The column <code>WETRN.MRKT_EFF_SLS_PERD.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public final TableField<MrktEffSlsPerdRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was last updated.");

	/**
	 * Create a <code>WETRN.MRKT_EFF_SLS_PERD</code> table reference
	 */
	public MrktEffSlsPerd() {
		this("MRKT_EFF_SLS_PERD", null);
	}

	/**
	 * Create an aliased <code>WETRN.MRKT_EFF_SLS_PERD</code> table reference
	 */
	public MrktEffSlsPerd(String alias) {
		this(alias, MRKT_EFF_SLS_PERD);
	}

	private MrktEffSlsPerd(String alias, Table<MrktEffSlsPerdRecord> aliased) {
		this(alias, aliased, null);
	}

	private MrktEffSlsPerd(String alias, Table<MrktEffSlsPerdRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "Parameters at MRKT+SLS_PERD level that do not change every SLS_PERD.  De-normalised table containing all parameters at this level that would be in individual tables if fully normalised.  Any parameters not changing must be copied to the new row where a parameter is changing.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MrktEffSlsPerdRecord> getPrimaryKey() {
		return Keys.PK_MRKT_EFF_SLS_PERD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MrktEffSlsPerdRecord>> getKeys() {
		return Arrays.<UniqueKey<MrktEffSlsPerdRecord>>asList(Keys.PK_MRKT_EFF_SLS_PERD);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<MrktEffSlsPerdRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<MrktEffSlsPerdRecord, ?>>asList(Keys.FK_MRKTPERD_MRKTEFFSLSPERD, Keys.FK_DLYBILNGMTCH_MRKTEFFSLSPERD, Keys.FK_MRKT_MRKTEFFSLSPERD);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MrktEffSlsPerd as(String alias) {
		return new MrktEffSlsPerd(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MrktEffSlsPerd rename(String name) {
		return new MrktEffSlsPerd(name, null);
	}
}

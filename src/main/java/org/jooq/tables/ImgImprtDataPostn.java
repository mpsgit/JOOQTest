/**
 * This class is generated by jOOQ
 */
package org.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Keys;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.Wetrn;
import org.jooq.impl.TableImpl;
import org.jooq.tables.records.ImgImprtDataPostnRecord;


/**
 * Used by the MAPS application to identify part of the Image Filename as 
 * a data item.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImgImprtDataPostn extends TableImpl<ImgImprtDataPostnRecord> {

	private static final long serialVersionUID = 1155386694;

	/**
	 * The reference instance of <code>WETRN.IMG_IMPRT_DATA_POSTN</code>
	 */
	public static final ImgImprtDataPostn IMG_IMPRT_DATA_POSTN = new ImgImprtDataPostn();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ImgImprtDataPostnRecord> getRecordType() {
		return ImgImprtDataPostnRecord.class;
	}

	/**
	 * The column <code>WETRN.IMG_IMPRT_DATA_POSTN.MRKT_ID</code>. An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.
	 */
	public final TableField<ImgImprtDataPostnRecord, BigDecimal> MRKT_ID = createField("MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "An identifier for a geographical area that is being planned. It is usually equal to a COUNTRY, but may be divided to a lower level of detail, such as a subdivision of a COUNTRY either by geography or selling mechanism.");

	/**
	 * The column <code>WETRN.IMG_IMPRT_DATA_POSTN.IMG_DATA_TYP_ID</code>. ID that identifies the type of Data to be used
	 */
	public final TableField<ImgImprtDataPostnRecord, BigDecimal> IMG_DATA_TYP_ID = createField("IMG_DATA_TYP_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "ID that identifies the type of Data to be used");

	/**
	 * The column <code>WETRN.IMG_IMPRT_DATA_POSTN.STRT_POSTN_NR</code>. Start Position of Data to be used
	 */
	public final TableField<ImgImprtDataPostnRecord, Byte> STRT_POSTN_NR = createField("STRT_POSTN_NR", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "Start Position of Data to be used");

	/**
	 * The column <code>WETRN.IMG_IMPRT_DATA_POSTN.DATA_LNGTH_NR</code>. Length of Data to be used
	 */
	public final TableField<ImgImprtDataPostnRecord, Byte> DATA_LNGTH_NR = createField("DATA_LNGTH_NR", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "Length of Data to be used");

	/**
	 * The column <code>WETRN.IMG_IMPRT_DATA_POSTN.CREAT_USER_ID</code>. The MAPS Application USER ID of the user (person or process) that created the row.
	 */
	public final TableField<ImgImprtDataPostnRecord, String> CREAT_USER_ID = createField("CREAT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false).defaulted(true), this, "The MAPS Application USER ID of the user (person or process) that created the row.");

	/**
	 * The column <code>WETRN.IMG_IMPRT_DATA_POSTN.CREAT_TS</code>. The date and time the row was created.
	 */
	public final TableField<ImgImprtDataPostnRecord, Date> CREAT_TS = createField("CREAT_TS", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "The date and time the row was created.");

	/**
	 * The column <code>WETRN.IMG_IMPRT_DATA_POSTN.LAST_UPDT_USER_ID</code>. Contains the MAPS USER ID of the user (person or process) that last updated the row.
	 */
	public final TableField<ImgImprtDataPostnRecord, String> LAST_UPDT_USER_ID = createField("LAST_UPDT_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "Contains the MAPS USER ID of the user (person or process) that last updated the row.");

	/**
	 * The column <code>WETRN.IMG_IMPRT_DATA_POSTN.LAST_UPDT_TS</code>. The date and time the row was last updated.
	 */
	public final TableField<ImgImprtDataPostnRecord, Date> LAST_UPDT_TS = createField("LAST_UPDT_TS", org.jooq.impl.SQLDataType.DATE, this, "The date and time the row was last updated.");

	/**
	 * Create a <code>WETRN.IMG_IMPRT_DATA_POSTN</code> table reference
	 */
	public ImgImprtDataPostn() {
		this("IMG_IMPRT_DATA_POSTN", null);
	}

	/**
	 * Create an aliased <code>WETRN.IMG_IMPRT_DATA_POSTN</code> table reference
	 */
	public ImgImprtDataPostn(String alias) {
		this(alias, IMG_IMPRT_DATA_POSTN);
	}

	private ImgImprtDataPostn(String alias, Table<ImgImprtDataPostnRecord> aliased) {
		this(alias, aliased, null);
	}

	private ImgImprtDataPostn(String alias, Table<ImgImprtDataPostnRecord> aliased, Field<?>[] parameters) {
		super(alias, Wetrn.WETRN, aliased, parameters, "Used by the MAPS application to identify part of the Image Filename as a data item.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ImgImprtDataPostnRecord> getPrimaryKey() {
		return Keys.PK_IMG_IMPRT_DATA_POSTN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ImgImprtDataPostnRecord>> getKeys() {
		return Arrays.<UniqueKey<ImgImprtDataPostnRecord>>asList(Keys.PK_IMG_IMPRT_DATA_POSTN);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ImgImprtDataPostnRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ImgImprtDataPostnRecord, ?>>asList(Keys.FK_IMGDATATYP_IMGIMPRTDATAPOST);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImgImprtDataPostn as(String alias) {
		return new ImgImprtDataPostn(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ImgImprtDataPostn rename(String name) {
		return new ImgImprtDataPostn(name, null);
	}
}

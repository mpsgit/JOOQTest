/**
 * This class is generated by jOOQ
 */
package org.jooq.packages;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Wetrn;
import org.jooq.impl.PackageImpl;
import org.jooq.packages.pa_maps.CostImport;
import org.jooq.packages.pa_maps.GetPerdBetween;
import org.jooq.packages.pa_maps.GetSlsClsCd;
import org.jooq.packages.pa_maps.GetSlsClsDesc;
import org.jooq.packages.pa_maps.GlobalRefDataUpdate;
import org.jooq.packages.pa_maps.ProductUpdates;
import org.jooq.packages.pa_maps.RollbackIntrfcCntrlPending;
import org.jooq.packages.pa_maps.SetIntrfcCntrlPending;
import org.jooq.packages.pa_maps.SetProcessedIntrfcCntrl;


/**
 * Convenience access to all stored procedures and functions in PA_MAPS
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaMaps extends PackageImpl {

	private static final long serialVersionUID = -1961780939;

	/**
	 * The reference instance of <code>WETRN.PA_MAPS</code>
	 */
	public static final PaMaps PA_MAPS = new PaMaps();

	/**
	 * Call <code>WETRN.PA_MAPS.COST_IMPORT</code>
	 */
	public static BigDecimal costImport(Configuration configuration) {
		CostImport p = new CostImport();

		p.execute(configuration);
		return p.getPaMapsRc();
	}

	/**
	 * Call <code>WETRN.PA_MAPS.GET_PERD_BETWEEN</code>
	 */
	public static BigDecimal getPerdBetween(Configuration configuration, Number vMrktId, Number vPerd1, Number vPerd2) {
		GetPerdBetween f = new GetPerdBetween();
		f.setVMrktId(vMrktId);
		f.setVPerd1(vPerd1);
		f.setVPerd2(vPerd2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>WETRN.PA_MAPS.GET_PERD_BETWEEN</code> as a field.
	 */
	public static Field<BigDecimal> getPerdBetween(Number vMrktId, Number vPerd1, Number vPerd2) {
		GetPerdBetween f = new GetPerdBetween();
		f.setVMrktId(vMrktId);
		f.setVPerd1(vPerd1);
		f.setVPerd2(vPerd2);

		return f.asField();
	}

	/**
	 * Get <code>WETRN.PA_MAPS.GET_PERD_BETWEEN</code> as a field.
	 */
	public static Field<BigDecimal> getPerdBetween(Field<? extends Number> vMrktId, Field<? extends Number> vPerd1, Field<? extends Number> vPerd2) {
		GetPerdBetween f = new GetPerdBetween();
		f.setVMrktId(vMrktId);
		f.setVPerd1(vPerd1);
		f.setVPerd2(vPerd2);

		return f.asField();
	}

	/**
	 * Call <code>WETRN.PA_MAPS.GET_SLS_CLS_CD</code>
	 */
	public static String getSlsClsCd(Configuration configuration, Integer vCurrPerdId, Integer vMrktId, Integer vCoaPerdId, Integer vCoiPerdId, Integer vDemoOfsNr, Integer vDemoDurtnNr, Integer vNewDurtnNr, Integer vStusPerdId, Integer vDspostnPerdId, Integer vOnStusPerdId) {
		GetSlsClsCd f = new GetSlsClsCd();
		f.setVCurrPerdId(vCurrPerdId);
		f.setVMrktId(vMrktId);
		f.setVCoaPerdId(vCoaPerdId);
		f.setVCoiPerdId(vCoiPerdId);
		f.setVDemoOfsNr(vDemoOfsNr);
		f.setVDemoDurtnNr(vDemoDurtnNr);
		f.setVNewDurtnNr(vNewDurtnNr);
		f.setVStusPerdId(vStusPerdId);
		f.setVDspostnPerdId(vDspostnPerdId);
		f.setVOnStusPerdId(vOnStusPerdId);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>WETRN.PA_MAPS.GET_SLS_CLS_CD</code> as a field.
	 */
	public static Field<String> getSlsClsCd(Integer vCurrPerdId, Integer vMrktId, Integer vCoaPerdId, Integer vCoiPerdId, Integer vDemoOfsNr, Integer vDemoDurtnNr, Integer vNewDurtnNr, Integer vStusPerdId, Integer vDspostnPerdId, Integer vOnStusPerdId) {
		GetSlsClsCd f = new GetSlsClsCd();
		f.setVCurrPerdId(vCurrPerdId);
		f.setVMrktId(vMrktId);
		f.setVCoaPerdId(vCoaPerdId);
		f.setVCoiPerdId(vCoiPerdId);
		f.setVDemoOfsNr(vDemoOfsNr);
		f.setVDemoDurtnNr(vDemoDurtnNr);
		f.setVNewDurtnNr(vNewDurtnNr);
		f.setVStusPerdId(vStusPerdId);
		f.setVDspostnPerdId(vDspostnPerdId);
		f.setVOnStusPerdId(vOnStusPerdId);

		return f.asField();
	}

	/**
	 * Get <code>WETRN.PA_MAPS.GET_SLS_CLS_CD</code> as a field.
	 */
	public static Field<String> getSlsClsCd(Field<Integer> vCurrPerdId, Field<Integer> vMrktId, Field<Integer> vCoaPerdId, Field<Integer> vCoiPerdId, Field<Integer> vDemoOfsNr, Field<Integer> vDemoDurtnNr, Field<Integer> vNewDurtnNr, Field<Integer> vStusPerdId, Field<Integer> vDspostnPerdId, Field<Integer> vOnStusPerdId) {
		GetSlsClsCd f = new GetSlsClsCd();
		f.setVCurrPerdId(vCurrPerdId);
		f.setVMrktId(vMrktId);
		f.setVCoaPerdId(vCoaPerdId);
		f.setVCoiPerdId(vCoiPerdId);
		f.setVDemoOfsNr(vDemoOfsNr);
		f.setVDemoDurtnNr(vDemoDurtnNr);
		f.setVNewDurtnNr(vNewDurtnNr);
		f.setVStusPerdId(vStusPerdId);
		f.setVDspostnPerdId(vDspostnPerdId);
		f.setVOnStusPerdId(vOnStusPerdId);

		return f.asField();
	}

	/**
	 * Call <code>WETRN.PA_MAPS.GET_SLS_CLS_DESC</code>
	 */
	public static String getSlsClsDesc(Configuration configuration, String vSlsClsCd) {
		GetSlsClsDesc f = new GetSlsClsDesc();
		f.setVSlsClsCd(vSlsClsCd);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>WETRN.PA_MAPS.GET_SLS_CLS_DESC</code> as a field.
	 */
	public static Field<String> getSlsClsDesc(String vSlsClsCd) {
		GetSlsClsDesc f = new GetSlsClsDesc();
		f.setVSlsClsCd(vSlsClsCd);

		return f.asField();
	}

	/**
	 * Get <code>WETRN.PA_MAPS.GET_SLS_CLS_DESC</code> as a field.
	 */
	public static Field<String> getSlsClsDesc(Field<String> vSlsClsCd) {
		GetSlsClsDesc f = new GetSlsClsDesc();
		f.setVSlsClsCd(vSlsClsCd);

		return f.asField();
	}

	/**
	 * Call <code>WETRN.PA_MAPS.GLOBAL_REF_DATA_UPDATE</code>
	 */
	public static BigDecimal globalRefDataUpdate(Configuration configuration) {
		GlobalRefDataUpdate p = new GlobalRefDataUpdate();

		p.execute(configuration);
		return p.getPaMapsRc();
	}

	/**
	 * Call <code>WETRN.PA_MAPS.PRODUCT_UPDATES</code>
	 */
	public static BigDecimal productUpdates(Configuration configuration) {
		ProductUpdates p = new ProductUpdates();

		p.execute(configuration);
		return p.getPaMapsRc();
	}

	/**
	 * Call <code>WETRN.PA_MAPS.ROLLBACK_INTRFC_CNTRL_PENDING</code>
	 */
	public static void rollbackIntrfcCntrlPending(Configuration configuration, Number pTopic) {
		RollbackIntrfcCntrlPending p = new RollbackIntrfcCntrlPending();
		p.setPTopic(pTopic);

		p.execute(configuration);
	}

	/**
	 * Call <code>WETRN.PA_MAPS.SET_INTRFC_CNTRL_PENDING</code>
	 */
	public static void setIntrfcCntrlPending(Configuration configuration, Number pTopic) {
		SetIntrfcCntrlPending p = new SetIntrfcCntrlPending();
		p.setPTopic(pTopic);

		p.execute(configuration);
	}

	/**
	 * Call <code>WETRN.PA_MAPS.SET_PROCESSED_INTRFC_CNTRL</code>
	 */
	public static void setProcessedIntrfcCntrl(Configuration configuration, Number pTopic) {
		SetProcessedIntrfcCntrl p = new SetProcessedIntrfcCntrl();
		p.setPTopic(pTopic);

		p.execute(configuration);
	}

	/**
	 * No further instances allowed
	 */
	private PaMaps() {
		super("PA_MAPS", Wetrn.WETRN);
	}
}

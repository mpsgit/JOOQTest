/**
 * This class is generated by jOOQ
 */
package org.jooq.packages;


import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Wetrn;
import org.jooq.impl.PackageImpl;
import org.jooq.packages.rep_camp_plan_eval.CurrentVersion;
import org.jooq.packages.rep_camp_plan_eval.GetOffsetsClob;
import org.jooq.packages.rep_camp_plan_eval.GetOffsetsString;
import org.jooq.packages.rep_camp_plan_eval.PriorVersion;


/**
 * Convenience access to all stored procedures and functions in REP_CAMP_PLAN_EVAL
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RepCampPlanEval extends PackageImpl {

	private static final long serialVersionUID = -1362403784;

	/**
	 * The reference instance of <code>WETRN.REP_CAMP_PLAN_EVAL</code>
	 */
	public static final RepCampPlanEval REP_CAMP_PLAN_EVAL = new RepCampPlanEval();

	/**
	 * Call <code>WETRN.REP_CAMP_PLAN_EVAL.CURRENT_VERSION</code>
	 */
	public static Object currentVersion(Configuration configuration, Number pMrktId, Number pFromPerdId, Number pToPerdId, Number pVerId, String pVehId, String pCatgryId, String pCurrency, String pSlsAid, String pAccByImpCat, String pIncSupBud, String pCampaignSls, Number pOffsetMin, Number pOffsetMax) {
		CurrentVersion f = new CurrentVersion();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPVerId(pVerId);
		f.setPVehId(pVehId);
		f.setPCatgryId(pCatgryId);
		f.setPCurrency(pCurrency);
		f.setPSlsAid(pSlsAid);
		f.setPAccByImpCat(pAccByImpCat);
		f.setPIncSupBud(pIncSupBud);
		f.setPCampaignSls(pCampaignSls);
		f.setPOffsetMin(pOffsetMin);
		f.setPOffsetMax(pOffsetMax);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>WETRN.REP_CAMP_PLAN_EVAL.CURRENT_VERSION</code> as a field.
	 */
	public static Field<Object> currentVersion(Number pMrktId, Number pFromPerdId, Number pToPerdId, Number pVerId, String pVehId, String pCatgryId, String pCurrency, String pSlsAid, String pAccByImpCat, String pIncSupBud, String pCampaignSls, Number pOffsetMin, Number pOffsetMax) {
		CurrentVersion f = new CurrentVersion();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPVerId(pVerId);
		f.setPVehId(pVehId);
		f.setPCatgryId(pCatgryId);
		f.setPCurrency(pCurrency);
		f.setPSlsAid(pSlsAid);
		f.setPAccByImpCat(pAccByImpCat);
		f.setPIncSupBud(pIncSupBud);
		f.setPCampaignSls(pCampaignSls);
		f.setPOffsetMin(pOffsetMin);
		f.setPOffsetMax(pOffsetMax);

		return f.asField();
	}

	/**
	 * Get <code>WETRN.REP_CAMP_PLAN_EVAL.CURRENT_VERSION</code> as a field.
	 */
	public static Field<Object> currentVersion(Field<? extends Number> pMrktId, Field<? extends Number> pFromPerdId, Field<? extends Number> pToPerdId, Field<? extends Number> pVerId, Field<String> pVehId, Field<String> pCatgryId, Field<String> pCurrency, Field<String> pSlsAid, Field<String> pAccByImpCat, Field<String> pIncSupBud, Field<String> pCampaignSls, Field<? extends Number> pOffsetMin, Field<? extends Number> pOffsetMax) {
		CurrentVersion f = new CurrentVersion();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPVerId(pVerId);
		f.setPVehId(pVehId);
		f.setPCatgryId(pCatgryId);
		f.setPCurrency(pCurrency);
		f.setPSlsAid(pSlsAid);
		f.setPAccByImpCat(pAccByImpCat);
		f.setPIncSupBud(pIncSupBud);
		f.setPCampaignSls(pCampaignSls);
		f.setPOffsetMin(pOffsetMin);
		f.setPOffsetMax(pOffsetMax);

		return f.asField();
	}

	/**
	 * Call <code>WETRN.REP_CAMP_PLAN_EVAL.GET_OFFSETS_CLOB</code>
	 */
	public static String getOffsetsClob(Configuration configuration, Number pMrktId, Number pFromPerdId, Number pToPerdId, Number pMinOffset, Number pMaxOffset, Number pCoo, String pPerdTyp) {
		GetOffsetsClob f = new GetOffsetsClob();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPMinOffset(pMinOffset);
		f.setPMaxOffset(pMaxOffset);
		f.setPCoo(pCoo);
		f.setPPerdTyp(pPerdTyp);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>WETRN.REP_CAMP_PLAN_EVAL.GET_OFFSETS_CLOB</code> as a field.
	 */
	public static Field<String> getOffsetsClob(Number pMrktId, Number pFromPerdId, Number pToPerdId, Number pMinOffset, Number pMaxOffset, Number pCoo, String pPerdTyp) {
		GetOffsetsClob f = new GetOffsetsClob();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPMinOffset(pMinOffset);
		f.setPMaxOffset(pMaxOffset);
		f.setPCoo(pCoo);
		f.setPPerdTyp(pPerdTyp);

		return f.asField();
	}

	/**
	 * Get <code>WETRN.REP_CAMP_PLAN_EVAL.GET_OFFSETS_CLOB</code> as a field.
	 */
	public static Field<String> getOffsetsClob(Field<? extends Number> pMrktId, Field<? extends Number> pFromPerdId, Field<? extends Number> pToPerdId, Field<? extends Number> pMinOffset, Field<? extends Number> pMaxOffset, Field<? extends Number> pCoo, Field<String> pPerdTyp) {
		GetOffsetsClob f = new GetOffsetsClob();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPMinOffset(pMinOffset);
		f.setPMaxOffset(pMaxOffset);
		f.setPCoo(pCoo);
		f.setPPerdTyp(pPerdTyp);

		return f.asField();
	}

	/**
	 * Call <code>WETRN.REP_CAMP_PLAN_EVAL.GET_OFFSETS_STRING</code>
	 */
	public static String getOffsetsString(Configuration configuration, Number pMrktId, Number pFromPerdId, Number pToPerdId, Number pMinOffset, Number pMaxOffset, Number pCoo, String pPerdTyp) {
		GetOffsetsString f = new GetOffsetsString();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPMinOffset(pMinOffset);
		f.setPMaxOffset(pMaxOffset);
		f.setPCoo(pCoo);
		f.setPPerdTyp(pPerdTyp);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>WETRN.REP_CAMP_PLAN_EVAL.GET_OFFSETS_STRING</code> as a field.
	 */
	public static Field<String> getOffsetsString(Number pMrktId, Number pFromPerdId, Number pToPerdId, Number pMinOffset, Number pMaxOffset, Number pCoo, String pPerdTyp) {
		GetOffsetsString f = new GetOffsetsString();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPMinOffset(pMinOffset);
		f.setPMaxOffset(pMaxOffset);
		f.setPCoo(pCoo);
		f.setPPerdTyp(pPerdTyp);

		return f.asField();
	}

	/**
	 * Get <code>WETRN.REP_CAMP_PLAN_EVAL.GET_OFFSETS_STRING</code> as a field.
	 */
	public static Field<String> getOffsetsString(Field<? extends Number> pMrktId, Field<? extends Number> pFromPerdId, Field<? extends Number> pToPerdId, Field<? extends Number> pMinOffset, Field<? extends Number> pMaxOffset, Field<? extends Number> pCoo, Field<String> pPerdTyp) {
		GetOffsetsString f = new GetOffsetsString();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPMinOffset(pMinOffset);
		f.setPMaxOffset(pMaxOffset);
		f.setPCoo(pCoo);
		f.setPPerdTyp(pPerdTyp);

		return f.asField();
	}

	/**
	 * Call <code>WETRN.REP_CAMP_PLAN_EVAL.PRIOR_VERSION</code>
	 */
	public static Object priorVersion(Configuration configuration, Number pMrktId, Number pFromPerdId, Number pToPerdId, Number pVerId, String pVehId, String pCatgryId, String pCurrency, String pSlsAid, String pAccByImpCat, String pIncSupBud, String pCampaignSls, Number pOffsetMin, Number pOffsetMax) {
		PriorVersion f = new PriorVersion();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPVerId(pVerId);
		f.setPVehId(pVehId);
		f.setPCatgryId(pCatgryId);
		f.setPCurrency(pCurrency);
		f.setPSlsAid(pSlsAid);
		f.setPAccByImpCat(pAccByImpCat);
		f.setPIncSupBud(pIncSupBud);
		f.setPCampaignSls(pCampaignSls);
		f.setPOffsetMin(pOffsetMin);
		f.setPOffsetMax(pOffsetMax);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>WETRN.REP_CAMP_PLAN_EVAL.PRIOR_VERSION</code> as a field.
	 */
	public static Field<Object> priorVersion(Number pMrktId, Number pFromPerdId, Number pToPerdId, Number pVerId, String pVehId, String pCatgryId, String pCurrency, String pSlsAid, String pAccByImpCat, String pIncSupBud, String pCampaignSls, Number pOffsetMin, Number pOffsetMax) {
		PriorVersion f = new PriorVersion();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPVerId(pVerId);
		f.setPVehId(pVehId);
		f.setPCatgryId(pCatgryId);
		f.setPCurrency(pCurrency);
		f.setPSlsAid(pSlsAid);
		f.setPAccByImpCat(pAccByImpCat);
		f.setPIncSupBud(pIncSupBud);
		f.setPCampaignSls(pCampaignSls);
		f.setPOffsetMin(pOffsetMin);
		f.setPOffsetMax(pOffsetMax);

		return f.asField();
	}

	/**
	 * Get <code>WETRN.REP_CAMP_PLAN_EVAL.PRIOR_VERSION</code> as a field.
	 */
	public static Field<Object> priorVersion(Field<? extends Number> pMrktId, Field<? extends Number> pFromPerdId, Field<? extends Number> pToPerdId, Field<? extends Number> pVerId, Field<String> pVehId, Field<String> pCatgryId, Field<String> pCurrency, Field<String> pSlsAid, Field<String> pAccByImpCat, Field<String> pIncSupBud, Field<String> pCampaignSls, Field<? extends Number> pOffsetMin, Field<? extends Number> pOffsetMax) {
		PriorVersion f = new PriorVersion();
		f.setPMrktId(pMrktId);
		f.setPFromPerdId(pFromPerdId);
		f.setPToPerdId(pToPerdId);
		f.setPVerId(pVerId);
		f.setPVehId(pVehId);
		f.setPCatgryId(pCatgryId);
		f.setPCurrency(pCurrency);
		f.setPSlsAid(pSlsAid);
		f.setPAccByImpCat(pAccByImpCat);
		f.setPIncSupBud(pIncSupBud);
		f.setPCampaignSls(pCampaignSls);
		f.setPOffsetMin(pOffsetMin);
		f.setPOffsetMax(pOffsetMax);

		return f.asField();
	}

	/**
	 * No further instances allowed
	 */
	private RepCampPlanEval() {
		super("REP_CAMP_PLAN_EVAL", Wetrn.WETRN);
	}
}

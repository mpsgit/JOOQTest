/**
 * This class is generated by jOOQ
 */
package org.jooq.packages.app_lnm_sc_reassign_bl_ms;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Parameter;
import org.jooq.Wetrn;
import org.jooq.impl.AbstractRoutine;
import org.jooq.packages.AppLnmScReassignBlMs;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModifyMsFsc extends AbstractRoutine<java.lang.Void> {

	private static final long serialVersionUID = -1521910733;

	/**
	 * The parameter <code>WETRN.APP_LNM_SC_REASSIGN_BL_MS.MODIFY_MS_FSC.P_OFFR_SKU_SET_ID</code>.
	 */
	public static final Parameter<BigDecimal> P_OFFR_SKU_SET_ID = createParameter("P_OFFR_SKU_SET_ID", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.APP_LNM_SC_REASSIGN_BL_MS.MODIFY_MS_FSC.P_FSC</code>.
	 */
	public static final Parameter<String> P_FSC = createParameter("P_FSC", org.jooq.impl.SQLDataType.VARCHAR, false);

	/**
	 * The parameter <code>WETRN.APP_LNM_SC_REASSIGN_BL_MS.MODIFY_MS_FSC.P_USER_ID</code>.
	 */
	public static final Parameter<String> P_USER_ID = createParameter("P_USER_ID", org.jooq.impl.SQLDataType.VARCHAR, false);

	/**
	 * Create a new routine call instance
	 */
	public ModifyMsFsc() {
		super("MODIFY_MS_FSC", Wetrn.WETRN, AppLnmScReassignBlMs.APP_LNM_SC_REASSIGN_BL_MS);

		addInParameter(P_OFFR_SKU_SET_ID);
		addInParameter(P_FSC);
		addInParameter(P_USER_ID);
	}

	/**
	 * Set the <code>P_OFFR_SKU_SET_ID</code> parameter IN value to the routine
	 */
	public void setPOffrSkuSetId(Number value) {
		setNumber(P_OFFR_SKU_SET_ID, value);
	}

	/**
	 * Set the <code>P_FSC</code> parameter IN value to the routine
	 */
	public void setPFsc(String value) {
		setValue(P_FSC, value);
	}

	/**
	 * Set the <code>P_USER_ID</code> parameter IN value to the routine
	 */
	public void setPUserId(String value) {
		setValue(P_USER_ID, value);
	}
}

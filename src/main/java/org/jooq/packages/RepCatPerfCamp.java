/**
 * This class is generated by jOOQ
 */
package org.jooq.packages;


import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Wetrn;
import org.jooq.impl.PackageImpl;
import org.jooq.packages.rep_cat_perf_camp.GetResult;


/**
 * Convenience access to all stored procedures and functions in REP_CAT_PERF_CAMP
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RepCatPerfCamp extends PackageImpl {

	private static final long serialVersionUID = -1781604783;

	/**
	 * The reference instance of <code>WETRN.REP_CAT_PERF_CAMP</code>
	 */
	public static final RepCatPerfCamp REP_CAT_PERF_CAMP = new RepCatPerfCamp();

	/**
	 * Call <code>WETRN.REP_CAT_PERF_CAMP.GET_RESULT</code>
	 */
	public static Object getResult(Configuration configuration, Number pMrktId, Number pPerdFrom, Number pPerdTo, Number pMinOffset, Number pMaxOffset, Number pSalesView, Number pPlug, String pVehId, String pCatgryId, Number pClstrId, Number pGendr, String pSlsClsId, String pLeadBusId, Number pSlsTypId, Number pAccumCatgry, String pUsCurrency, Number pSupportBudgetItems, String pFilter) {
		GetResult f = new GetResult();
		f.setPMrktId(pMrktId);
		f.setPPerdFrom(pPerdFrom);
		f.setPPerdTo(pPerdTo);
		f.setPMinOffset(pMinOffset);
		f.setPMaxOffset(pMaxOffset);
		f.setPSalesView(pSalesView);
		f.setPPlug(pPlug);
		f.setPVehId(pVehId);
		f.setPCatgryId(pCatgryId);
		f.setPClstrId(pClstrId);
		f.setPGendr(pGendr);
		f.setPSlsClsId(pSlsClsId);
		f.setPLeadBusId(pLeadBusId);
		f.setPSlsTypId(pSlsTypId);
		f.setPAccumCatgry(pAccumCatgry);
		f.setPUsCurrency(pUsCurrency);
		f.setPSupportBudgetItems(pSupportBudgetItems);
		f.setPFilter(pFilter);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>WETRN.REP_CAT_PERF_CAMP.GET_RESULT</code> as a field.
	 */
	public static Field<Object> getResult(Number pMrktId, Number pPerdFrom, Number pPerdTo, Number pMinOffset, Number pMaxOffset, Number pSalesView, Number pPlug, String pVehId, String pCatgryId, Number pClstrId, Number pGendr, String pSlsClsId, String pLeadBusId, Number pSlsTypId, Number pAccumCatgry, String pUsCurrency, Number pSupportBudgetItems, String pFilter) {
		GetResult f = new GetResult();
		f.setPMrktId(pMrktId);
		f.setPPerdFrom(pPerdFrom);
		f.setPPerdTo(pPerdTo);
		f.setPMinOffset(pMinOffset);
		f.setPMaxOffset(pMaxOffset);
		f.setPSalesView(pSalesView);
		f.setPPlug(pPlug);
		f.setPVehId(pVehId);
		f.setPCatgryId(pCatgryId);
		f.setPClstrId(pClstrId);
		f.setPGendr(pGendr);
		f.setPSlsClsId(pSlsClsId);
		f.setPLeadBusId(pLeadBusId);
		f.setPSlsTypId(pSlsTypId);
		f.setPAccumCatgry(pAccumCatgry);
		f.setPUsCurrency(pUsCurrency);
		f.setPSupportBudgetItems(pSupportBudgetItems);
		f.setPFilter(pFilter);

		return f.asField();
	}

	/**
	 * Get <code>WETRN.REP_CAT_PERF_CAMP.GET_RESULT</code> as a field.
	 */
	public static Field<Object> getResult(Field<? extends Number> pMrktId, Field<? extends Number> pPerdFrom, Field<? extends Number> pPerdTo, Field<? extends Number> pMinOffset, Field<? extends Number> pMaxOffset, Field<? extends Number> pSalesView, Field<? extends Number> pPlug, Field<String> pVehId, Field<String> pCatgryId, Field<? extends Number> pClstrId, Field<? extends Number> pGendr, Field<String> pSlsClsId, Field<String> pLeadBusId, Field<? extends Number> pSlsTypId, Field<? extends Number> pAccumCatgry, Field<String> pUsCurrency, Field<? extends Number> pSupportBudgetItems, Field<String> pFilter) {
		GetResult f = new GetResult();
		f.setPMrktId(pMrktId);
		f.setPPerdFrom(pPerdFrom);
		f.setPPerdTo(pPerdTo);
		f.setPMinOffset(pMinOffset);
		f.setPMaxOffset(pMaxOffset);
		f.setPSalesView(pSalesView);
		f.setPPlug(pPlug);
		f.setPVehId(pVehId);
		f.setPCatgryId(pCatgryId);
		f.setPClstrId(pClstrId);
		f.setPGendr(pGendr);
		f.setPSlsClsId(pSlsClsId);
		f.setPLeadBusId(pLeadBusId);
		f.setPSlsTypId(pSlsTypId);
		f.setPAccumCatgry(pAccumCatgry);
		f.setPUsCurrency(pUsCurrency);
		f.setPSupportBudgetItems(pSupportBudgetItems);
		f.setPFilter(pFilter);

		return f.asField();
	}

	/**
	 * No further instances allowed
	 */
	private RepCatPerfCamp() {
		super("REP_CAT_PERF_CAMP", Wetrn.WETRN);
	}
}

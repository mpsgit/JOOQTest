/**
 * This class is generated by jOOQ
 */
package org.jooq.packages.rep_bus_contr_catgry;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.Wetrn;
import org.jooq.impl.AbstractRoutine;
import org.jooq.packages.RepBusContrCatgry;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OffrVersion extends AbstractRoutine<Object> {

	private static final long serialVersionUID = 502517837;

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.RETURN_VALUE</code>.
	 */
	public static final Parameter<Object> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("TABLE"), false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_CLSTR_ID</code>.
	 */
	public static final Parameter<BigDecimal> P_CLSTR_ID = createParameter("P_CLSTR_ID", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_MRKT_ID</code>.
	 */
	public static final Parameter<BigDecimal> P_MRKT_ID = createParameter("P_MRKT_ID", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_FROM_PERD_ID</code>.
	 */
	public static final Parameter<BigDecimal> P_FROM_PERD_ID = createParameter("P_FROM_PERD_ID", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_TO_PERD_ID</code>.
	 */
	public static final Parameter<BigDecimal> P_TO_PERD_ID = createParameter("P_TO_PERD_ID", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_OFFR_VER_ID</code>.
	 */
	public static final Parameter<BigDecimal> P_OFFR_VER_ID = createParameter("P_OFFR_VER_ID", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_CURRENCY</code>.
	 */
	public static final Parameter<String> P_CURRENCY = createParameter("P_CURRENCY", org.jooq.impl.SQLDataType.VARCHAR, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_VEH_ID</code>.
	 */
	public static final Parameter<String> P_VEH_ID = createParameter("P_VEH_ID", org.jooq.impl.SQLDataType.VARCHAR, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_CATGRY_ID</code>.
	 */
	public static final Parameter<String> P_CATGRY_ID = createParameter("P_CATGRY_ID", org.jooq.impl.SQLDataType.VARCHAR, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_MIN_OFFSET</code>.
	 */
	public static final Parameter<BigDecimal> P_MIN_OFFSET = createParameter("P_MIN_OFFSET", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_MAX_OFFSET</code>.
	 */
	public static final Parameter<BigDecimal> P_MAX_OFFSET = createParameter("P_MAX_OFFSET", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_ACC_BY_IMP_CAT</code>.
	 */
	public static final Parameter<String> P_ACC_BY_IMP_CAT = createParameter("P_ACC_BY_IMP_CAT", org.jooq.impl.SQLDataType.VARCHAR, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_GENDER</code>.
	 */
	public static final Parameter<BigDecimal> P_GENDER = createParameter("P_GENDER", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>WETRN.REP_BUS_CONTR_CATGRY.OFFR_VERSION.P_PLUG</code>.
	 */
	public static final Parameter<BigDecimal> P_PLUG = createParameter("P_PLUG", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * Create a new routine call instance
	 */
	public OffrVersion() {
		super("OFFR_VERSION", Wetrn.WETRN, RepBusContrCatgry.REP_BUS_CONTR_CATGRY, org.jooq.impl.DefaultDataType.getDefaultDataType("TABLE"));

		setReturnParameter(RETURN_VALUE);
		addInParameter(P_CLSTR_ID);
		addInParameter(P_MRKT_ID);
		addInParameter(P_FROM_PERD_ID);
		addInParameter(P_TO_PERD_ID);
		addInParameter(P_OFFR_VER_ID);
		addInParameter(P_CURRENCY);
		addInParameter(P_VEH_ID);
		addInParameter(P_CATGRY_ID);
		addInParameter(P_MIN_OFFSET);
		addInParameter(P_MAX_OFFSET);
		addInParameter(P_ACC_BY_IMP_CAT);
		addInParameter(P_GENDER);
		addInParameter(P_PLUG);
	}

	/**
	 * Set the <code>P_CLSTR_ID</code> parameter IN value to the routine
	 */
	public void setPClstrId(Number value) {
		setNumber(P_CLSTR_ID, value);
	}

	/**
	 * Set the <code>P_CLSTR_ID</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPClstrId(Field<? extends Number> field) {
		setNumber(P_CLSTR_ID, field);
	}

	/**
	 * Set the <code>P_MRKT_ID</code> parameter IN value to the routine
	 */
	public void setPMrktId(Number value) {
		setNumber(P_MRKT_ID, value);
	}

	/**
	 * Set the <code>P_MRKT_ID</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPMrktId(Field<? extends Number> field) {
		setNumber(P_MRKT_ID, field);
	}

	/**
	 * Set the <code>P_FROM_PERD_ID</code> parameter IN value to the routine
	 */
	public void setPFromPerdId(Number value) {
		setNumber(P_FROM_PERD_ID, value);
	}

	/**
	 * Set the <code>P_FROM_PERD_ID</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPFromPerdId(Field<? extends Number> field) {
		setNumber(P_FROM_PERD_ID, field);
	}

	/**
	 * Set the <code>P_TO_PERD_ID</code> parameter IN value to the routine
	 */
	public void setPToPerdId(Number value) {
		setNumber(P_TO_PERD_ID, value);
	}

	/**
	 * Set the <code>P_TO_PERD_ID</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPToPerdId(Field<? extends Number> field) {
		setNumber(P_TO_PERD_ID, field);
	}

	/**
	 * Set the <code>P_OFFR_VER_ID</code> parameter IN value to the routine
	 */
	public void setPOffrVerId(Number value) {
		setNumber(P_OFFR_VER_ID, value);
	}

	/**
	 * Set the <code>P_OFFR_VER_ID</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPOffrVerId(Field<? extends Number> field) {
		setNumber(P_OFFR_VER_ID, field);
	}

	/**
	 * Set the <code>P_CURRENCY</code> parameter IN value to the routine
	 */
	public void setPCurrency(String value) {
		setValue(P_CURRENCY, value);
	}

	/**
	 * Set the <code>P_CURRENCY</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPCurrency(Field<String> field) {
		setField(P_CURRENCY, field);
	}

	/**
	 * Set the <code>P_VEH_ID</code> parameter IN value to the routine
	 */
	public void setPVehId(String value) {
		setValue(P_VEH_ID, value);
	}

	/**
	 * Set the <code>P_VEH_ID</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPVehId(Field<String> field) {
		setField(P_VEH_ID, field);
	}

	/**
	 * Set the <code>P_CATGRY_ID</code> parameter IN value to the routine
	 */
	public void setPCatgryId(String value) {
		setValue(P_CATGRY_ID, value);
	}

	/**
	 * Set the <code>P_CATGRY_ID</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPCatgryId(Field<String> field) {
		setField(P_CATGRY_ID, field);
	}

	/**
	 * Set the <code>P_MIN_OFFSET</code> parameter IN value to the routine
	 */
	public void setPMinOffset(Number value) {
		setNumber(P_MIN_OFFSET, value);
	}

	/**
	 * Set the <code>P_MIN_OFFSET</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPMinOffset(Field<? extends Number> field) {
		setNumber(P_MIN_OFFSET, field);
	}

	/**
	 * Set the <code>P_MAX_OFFSET</code> parameter IN value to the routine
	 */
	public void setPMaxOffset(Number value) {
		setNumber(P_MAX_OFFSET, value);
	}

	/**
	 * Set the <code>P_MAX_OFFSET</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPMaxOffset(Field<? extends Number> field) {
		setNumber(P_MAX_OFFSET, field);
	}

	/**
	 * Set the <code>P_ACC_BY_IMP_CAT</code> parameter IN value to the routine
	 */
	public void setPAccByImpCat(String value) {
		setValue(P_ACC_BY_IMP_CAT, value);
	}

	/**
	 * Set the <code>P_ACC_BY_IMP_CAT</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPAccByImpCat(Field<String> field) {
		setField(P_ACC_BY_IMP_CAT, field);
	}

	/**
	 * Set the <code>P_GENDER</code> parameter IN value to the routine
	 */
	public void setPGender(Number value) {
		setNumber(P_GENDER, value);
	}

	/**
	 * Set the <code>P_GENDER</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPGender(Field<? extends Number> field) {
		setNumber(P_GENDER, field);
	}

	/**
	 * Set the <code>P_PLUG</code> parameter IN value to the routine
	 */
	public void setPPlug(Number value) {
		setNumber(P_PLUG, value);
	}

	/**
	 * Set the <code>P_PLUG</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPPlug(Field<? extends Number> field) {
		setNumber(P_PLUG, field);
	}
}
